// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/booking.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {City} from "./city_pb.js";
import {PaymentMethod, User} from "./user_pb.js";
import {Traveller} from "./traveller_pb.js";
import {Gds} from "./gds_pb.js";
import {BookingStatus} from "./booking_status_pb.js";
import {Tag} from "./tag_pb.js";
import {Timestamp} from "../commons/timestamp_pb.js";
import {Flight} from "./flight_pb.js";
import {Airline} from "./airline_pb.js";

/**
 * Booking is returned in GetBooking and all the different GetBookings calls on the bookings service. It contains all the aggregated information
 * about a booking that gets created during StreamCreateReservation rpc call.
 *
 * @generated from message elude.proto.Booking
 */
export const Booking = proto3.makeMessageType(
  "elude.proto.Booking",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "elude_reference", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "departure_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "return_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "hotel_reservation_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "hotel_provider_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "flight_reservation_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "flight_reservation_companyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "stripe_charge_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "adults", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "children", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "infants", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "base_price_difference", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 17, name: "agent_fee", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 18, name: "total_amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 19, name: "tax_amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 20, name: "base_amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 21, name: "user_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 22, name: "payment_method_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 23, name: "departure_city_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 24, name: "arrival_city_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 25, name: "booking_status_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 26, name: "flight_gds_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 27, name: "hotel_gds_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 28, name: "itinerary", kind: "message", T: Itinerary },
    { no: 29, name: "departure_city", kind: "message", T: City },
    { no: 30, name: "arrival_city", kind: "message", T: City },
    { no: 31, name: "payment_method", kind: "message", T: PaymentMethod },
    { no: 32, name: "travellers", kind: "message", T: Traveller, repeated: true },
    { no: 33, name: "flight_gds", kind: "message", T: Gds },
    { no: 34, name: "hotel_gds", kind: "message", T: Gds },
    { no: 35, name: "user", kind: "message", T: User },
    { no: 36, name: "booking_status", kind: "message", T: BookingStatus },
    { no: 37, name: "tags", kind: "message", T: Tag, repeated: true },
    { no: 38, name: "booking_travellers", kind: "message", T: BookingTraveller, repeated: true },
    { no: 39, name: "departure_date_timestamp", kind: "message", T: Timestamp },
    { no: 40, name: "return_date_timestamp", kind: "message", T: Timestamp },
    { no: 41, name: "created_at", kind: "message", T: Timestamp },
    { no: 42, name: "airline_reservation_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 43, name: "stripe_booking_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Itinerary is usually returned as part of a Booking message. Contains info about the flight and the hotel for a booking.
 *
 * @generated from message elude.proto.Itinerary
 */
export const Itinerary = proto3.makeMessageType(
  "elude.proto.Itinerary",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "airline_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "departure_flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "return_flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "total_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "tax_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 9, name: "base_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 10, name: "main_ticket_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "hotel", kind: "message", T: Hotel },
    { no: 12, name: "departure_flight", kind: "message", T: Flight },
    { no: 13, name: "return_flight", kind: "message", T: Flight },
    { no: 14, name: "airline", kind: "message", T: Airline },
    { no: 15, name: "booking", kind: "message", T: Booking },
  ],
);

/**
 * Hotel is usually returned as part of Itinerary message. Contains info about the hotel that was booked.
 *
 * @generated from message elude.proto.Hotel
 */
export const Hotel = proto3.makeMessageType(
  "elude.proto.Hotel",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "confirmation_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "check_in_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "check_out_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "total_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 10, name: "tax_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 11, name: "base_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 12, name: "rating", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "stars", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "itinerary_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "city_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "itinerary", kind: "message", T: Itinerary },
    { no: 17, name: "city", kind: "message", T: City },
    { no: 18, name: "latitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 19, name: "longitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 20, name: "rooms", kind: "message", T: Room, repeated: true },
    { no: 21, name: "image_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "check_in_date_timestamp", kind: "message", T: Timestamp },
    { no: 23, name: "check_out_date_timestamp", kind: "message", T: Timestamp },
  ],
);

/**
 * Room is usually returned as part of Hotel message. Contains info about the specific room that was booked.
 *
 * @generated from message elude.proto.Room
 */
export const Room = proto3.makeMessageType(
  "elude.proto.Room",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "meal", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "hotel", kind: "message", T: Hotel },
  ],
);

/**
 * BookingTraveller is usually returned as part of a Booking message. Contains info about the travelers for a specific booking.
 *
 * @generated from message elude.proto.BookingTraveller
 */
export const BookingTraveller = proto3.makeMessageType(
  "elude.proto.BookingTraveller",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "traveller_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "traveller", kind: "message", T: Traveller },
    { no: 5, name: "ticket_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

