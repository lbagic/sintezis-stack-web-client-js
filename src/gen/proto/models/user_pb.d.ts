// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/user.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Airport, City} from "./city_pb.js";
import type {Title} from "./title_pb.js";
import type {Country} from "./country_pb.js";
import type {AuthProvider} from "./auth_provider_pb.js";
import type {Media} from "./media_pb.js";
import type {Timestamp} from "../commons/timestamp_pb.js";
import type {Role} from "./role_pb.js";
import type {Location} from "./location_pb.js";
import type {AuthProviderEnum} from "../commons/enum_pb.js";
import type {Preference} from "./preference_pb.js";
import type {PaymentProvider} from "./payment_provider_pb.js";

/**
 * User message is returned for User CRUD rpc calls and in most account rpc calls. Contains all of the data for a user.
 *
 * @generated from message elude.proto.User
 */
export declare class User extends Message<User> {
  /**
   * User id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * User first name.
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * User last name.
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * User date of birth.
   *
   * @generated from field: string date_of_birth = 4;
   */
  dateOfBirth: string;

  /**
   * User phone number.
   *
   * @generated from field: string phone = 5;
   */
  phone: string;

  /**
   * User email.
   *
   * @generated from field: string email = 6;
   */
  email: string;

  /**
   * User password. Not mapped from DB. Hashed.
   *
   * @generated from field: string password = 7;
   */
  password: string;

  /**
   * User address.
   *
   * @generated from field: string address = 8;
   */
  address: string;

  /**
   * If true user is admin.
   *
   * @generated from field: bool is_admin = 9;
   */
  isAdmin: boolean;

  /**
   * User onboarding data. Currently not used.
   *
   * @generated from field: string onboarding_data = 10;
   */
  onboardingData: string;

  /**
   * User city id.
   *
   * @generated from field: int32 city_id = 11;
   */
  cityId: number;

  /**
   * User title id.
   *
   * @generated from field: int32 title_id = 12;
   */
  titleId: number;

  /**
   * User phone country id.
   *
   * @generated from field: int32 phone_country_id = 13;
   */
  phoneCountryId: number;

  /**
   * User profile picture id. Currently not used.
   *
   * @generated from field: int32 profile_picture_id = 14;
   */
  profilePictureId: number;

  /**
   * User auth provider id.
   *
   * @generated from field: int32 auth_provider_id = 15;
   */
  authProviderId: number;

  /**
   * User city data.
   *
   * @generated from field: elude.proto.City city = 16;
   */
  city?: City;

  /**
   * User title data.
   *
   * @generated from field: elude.proto.Title title = 17;
   */
  title?: Title;

  /**
   * User country data.
   *
   * @generated from field: elude.proto.Country phone_country = 18;
   */
  phoneCountry?: Country;

  /**
   * User auth provider data.
   *
   * @generated from field: elude.proto.AuthProvider auth_provider = 19;
   */
  authProvider?: AuthProvider;

  /**
   * User profile picture data. Currently not used.
   *
   * @generated from field: elude.proto.Media profile_picture = 20;
   */
  profilePicture?: Media;

  /**
   * User verified timestamp.
   *
   * @generated from field: elude.proto.Timestamp verified_at = 21;
   */
  verifiedAt?: Timestamp;

  /**
   * User verification token. Used for user validation.
   *
   * @generated from field: string verification_token = 22;
   */
  verificationToken: string;

  /**
   * User recovery token. Used for forgot password.
   *
   * @generated from field: string recovery_token = 23;
   */
  recoveryToken: string;

  /**
   * User traveller type. Not used in DB.
   *
   * @generated from field: string traveler_type = 24;
   */
  travelerType: string;

  /**
   * List of user socials registers data.
   *
   * @generated from field: repeated elude.proto.UserSocial socials = 25;
   */
  socials: UserSocial[];

  /**
   * List of users payment methods data.
   *
   * @generated from field: repeated elude.proto.PaymentMethod payment_methods = 26;
   */
  paymentMethods: PaymentMethod[];

  /**
   * List of user roles data.
   *
   * @generated from field: repeated elude.proto.Role roles = 27;
   */
  roles: Role[];

  /**
   * User created at timestamp.
   *
   * @generated from field: elude.proto.Timestamp created_at = 28;
   */
  createdAt?: Timestamp;

  /**
   * User preferred airport data.
   *
   * @generated from field: elude.proto.Airport preferred_airport = 29;
   */
  preferredAirport?: Airport;

  /**
   * User airport id.
   *
   * @generated from field: int32 airport_id = 30;
   */
  airportId: number;

  /**
   * User preferred airport location data. Not used in DB.
   *
   * @generated from field: elude.proto.Location preferred_airport_location = 31;
   */
  preferredAirportLocation?: Location;

  /**
   * User auth provider.
   *
   * @generated from field: elude.proto.AuthProviderEnum provider = 32;
   */
  provider: AuthProviderEnum;

  /**
   * User verification sent timestamp.
   *
   * @generated from field: elude.proto.Timestamp verification_sent_at = 33;
   */
  verificationSentAt?: Timestamp;

  /**
   * List of users preferences data.
   *
   * @generated from field: repeated elude.proto.Preference preferences = 34;
   */
  preferences: Preference[];

  constructor(data?: PartialMessage<User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User;

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean;
}

/**
 * UserSocial message is returned as part of the User message.
 *
 * @generated from message elude.proto.UserSocial
 */
export declare class UserSocial extends Message<UserSocial> {
  /**
   * User social id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * User social auth provider id.
   *
   * @generated from field: int32 auth_provider_id = 2;
   */
  authProviderId: number;

  /**
   * User social auth provider data.
   *
   * @generated from field: elude.proto.AuthProvider auth_provider = 3;
   */
  authProvider?: AuthProvider;

  /**
   * User id.
   *
   * @generated from field: int32 user_id = 4;
   */
  userId: number;

  /**
   * User data.
   *
   * @generated from field: elude.proto.User user = 5;
   */
  user?: User;

  /**
   * User social unique identifier.
   *
   * @generated from field: string unique_identifier = 6;
   */
  uniqueIdentifier: string;

  /**
   * User social fallback field.
   *
   * @generated from field: string fallback_field = 7;
   */
  fallbackField: string;

  /**
   * User social auth provider.
   *
   * @generated from field: elude.proto.AuthProviderEnum provider = 8;
   */
  provider: AuthProviderEnum;

  constructor(data?: PartialMessage<UserSocial>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.UserSocial";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSocial;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSocial;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSocial;

  static equals(a: UserSocial | PlainMessage<UserSocial> | undefined, b: UserSocial | PlainMessage<UserSocial> | undefined): boolean;
}

/**
 * PaymentMethod message is returned for Payment Method CRUD rpc calls.
 *
 * @generated from message elude.proto.PaymentMethod
 */
export declare class PaymentMethod extends Message<PaymentMethod> {
  /**
   * Payment method id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Last four digits of payment method card.
   *
   * @generated from field: string last_four = 2;
   */
  lastFour: string;

  /**
   * Payment provider customer id.
   *
   * @generated from field: string customer_id = 3;
   */
  customerId: string;

  /**
   * If true payment method is default.
   *
   * @generated from field: int32 is_default = 4;
   */
  isDefault: number;

  /**
   * Payment method brand (e.g. Visa).
   *
   * @generated from field: string brand = 5;
   */
  brand: string;

  /**
   * Payment method card name.
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Payment method user id.
   *
   * @generated from field: int32 user_id = 7;
   */
  userId: number;

  /**
   * Payment provider id.
   *
   * @generated from field: int32 payment_provider_id = 8;
   */
  paymentProviderId: number;

  /**
   * Payment method user data.
   *
   * @generated from field: elude.proto.User user = 9;
   */
  user?: User;

  /**
   * Payment provider data.
   *
   * @generated from field: elude.proto.PaymentProvider payment_provider = 10;
   */
  paymentProvider?: PaymentProvider;

  constructor(data?: PartialMessage<PaymentMethod>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PaymentMethod";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethod;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethod;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethod;

  static equals(a: PaymentMethod | PlainMessage<PaymentMethod> | undefined, b: PaymentMethod | PlainMessage<PaymentMethod> | undefined): boolean;
}

