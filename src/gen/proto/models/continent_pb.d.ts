// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/continent.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * Continent message is returned as an association of Country message. Contains info about a continent.
 *
 * @generated from message elude.proto.Continent
 */
export declare class Continent extends Message<Continent> {
  /**
   * Continent id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Continent name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Continent iso code, 2 letter code.
   *
   * @generated from field: string iso_code = 3;
   */
  isoCode: string;

  constructor(data?: PartialMessage<Continent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Continent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Continent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Continent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Continent;

  static equals(a: Continent | PlainMessage<Continent> | undefined, b: Continent | PlainMessage<Continent> | undefined): boolean;
}

