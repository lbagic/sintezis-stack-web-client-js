// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/amenity.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Media} from "./media_pb.js";
import type {Gds} from "./gds_pb.js";

/**
 * Amenity message is returned in responses for Amenity CRUD operations. It contains all the information for Amenity model.
 *
 * @generated from message elude.proto.Amenity
 */
export declare class Amenity extends Message<Amenity> {
  /**
   * Amenity id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Amenity name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Amenity gds id.
   *
   * @generated from field: int32 gds_id = 3;
   */
  gdsId: number;

  /**
   * Amenity image id in database media table.
   *
   * @generated from field: int32 image_id = 4;
   */
  imageId: number;

  /**
   * Amenity media data.
   *
   * @generated from field: elude.proto.Media media = 5;
   */
  media?: Media;

  /**
   * Amenity gds data.
   *
   * @generated from field: elude.proto.Gds gds = 6;
   */
  gds?: Gds;

  /**
   * If false amenity is not used.
   *
   * @generated from field: bool is_active = 7;
   */
  isActive: boolean;

  constructor(data?: PartialMessage<Amenity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Amenity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Amenity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Amenity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Amenity;

  static equals(a: Amenity | PlainMessage<Amenity> | undefined, b: Amenity | PlainMessage<Amenity> | undefined): boolean;
}

