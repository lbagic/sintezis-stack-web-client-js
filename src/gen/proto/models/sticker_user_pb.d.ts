// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/sticker_user.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Sticker} from "./sticker_pb.js";
import type {User} from "./user_pb.js";

/**
 * StickerUser message is returned in GetStickersForUser rpc. Contains all the info on user, a specific sticker and when
 * the user acquired the sticker
 *
 * @generated from message elude.proto.StickerUser
 */
export declare class StickerUser extends Message<StickerUser> {
  /**
   * Sticker user id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Sticker id.
   *
   * @generated from field: int32 sticker_id = 2;
   */
  stickerId: number;

  /**
   * Sticker data.
   *
   * @generated from field: elude.proto.Sticker sticker = 3;
   */
  sticker?: Sticker;

  /**
   * User id.
   *
   * @generated from field: int32 user_id = 4;
   */
  userId: number;

  /**
   * User data.
   *
   * @generated from field: elude.proto.User user = 5;
   */
  user?: User;

  /**
   * Time stamp when sticker was acquired.
   *
   * @generated from field: string acquired_at = 6;
   */
  acquiredAt: string;

  constructor(data?: PartialMessage<StickerUser>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.StickerUser";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StickerUser;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StickerUser;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StickerUser;

  static equals(a: StickerUser | PlainMessage<StickerUser> | undefined, b: StickerUser | PlainMessage<StickerUser> | undefined): boolean;
}

