// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/booking.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {City} from "./city_pb.js";
import type {PaymentMethod, User} from "./user_pb.js";
import type {Traveller} from "./traveller_pb.js";
import type {Gds} from "./gds_pb.js";
import type {BookingStatus} from "./booking_status_pb.js";
import type {Tag} from "./tag_pb.js";
import type {Timestamp} from "../commons/timestamp_pb.js";
import type {Flight} from "./flight_pb.js";
import type {Airline} from "./airline_pb.js";

/**
 * Booking is returned in GetBooking and all the different GetBookings calls on the bookings service. It contains all the aggregated information
 * about a booking that gets created during StreamCreateReservation rpc call.
 *
 * @generated from message elude.proto.Booking
 */
export declare class Booking extends Message<Booking> {
  /**
   * Booking id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Booking cache session id.
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * Booking elude pnr.
   *
   * @generated from field: string elude_reference = 3;
   */
  eludeReference: string;

  /**
   * Booking beginning date.
   *
   * @generated from field: string departure_date = 4 [deprecated = true];
   * @deprecated
   */
  departureDate: string;

  /**
   * Booking end date.
   *
   * @generated from field: string return_date = 5 [deprecated = true];
   * @deprecated
   */
  returnDate: string;

  /**
   * 3 letter currency code (eg, USD, EUR, HRK)
   *
   * @generated from field: string currency = 6;
   */
  currency: string;

  /**
   * Booking hotel gds reservation code.
   *
   * @generated from field: string hotel_reservation_code = 7;
   */
  hotelReservationCode: string;

  /**
   * Booking hotel provider code.
   *
   * @generated from field: string hotel_provider_code = 8;
   */
  hotelProviderCode: string;

  /**
   * Booking flight gds reservation code.
   *
   * @generated from field: string flight_reservation_code = 9;
   */
  flightReservationCode: string;

  /**
   * Booking flight reservation company id.
   *
   * @generated from field: string flight_reservation_companyId = 10;
   */
  flightReservationCompanyId: string;

  /**
   * Booking stripe charge id.
   *
   * @generated from field: string stripe_charge_id = 11;
   */
  stripeChargeId: string;

  /**
   * Number of travellers age 12 and older.
   *
   * @generated from field: int32 adults = 12;
   */
  adults: number;

  /**
   * Number of travellers between ages 2 (included) and 12.
   *
   * @generated from field: int32 children = 13;
   */
  children: number;

  /**
   * Number of travellers younger than 2.
   *
   * @generated from field: int32 infants = 14;
   */
  infants: number;

  /**
   * Total price.
   *
   * @generated from field: int32 price = 15;
   */
  price: number;

  /**
   * Base price - real price.
   *
   * @generated from field: int32 base_price_difference = 16;
   */
  basePriceDifference: number;

  /**
   * Total price * (percentage) + fixed fee
   *
   * @generated from field: int32 agent_fee = 17;
   */
  agentFee: number;

  /**
   * Price amount after tax.
   *
   * @generated from field: int32 total_amount = 18;
   */
  totalAmount: number;

  /**
   * Price amount after tax - Price amount before tax
   *
   * @generated from field: int32 tax_amount = 19;
   */
  taxAmount: number;

  /**
   * Price amount before tax.
   *
   * @generated from field: int32 base_amount = 20;
   */
  baseAmount: number;

  /**
   * Booking user id.
   *
   * @generated from field: int32 user_id = 21;
   */
  userId: number;

  /**
   * Booking payment method id.
   *
   * @generated from field: int32 payment_method_id = 22;
   */
  paymentMethodId: number;

  /**
   * Booking departure city id. If hotel only reservation this is null.
   *
   * @generated from field: int32 departure_city_id = 23;
   */
  departureCityId: number;

  /**
   * Booking arrival city id. If hotel only reservation this is hotel city.
   *
   * @generated from field: int32 arrival_city_id = 24;
   */
  arrivalCityId: number;

  /**
   * Booking status id.
   *
   * @generated from field: int32 booking_status_id = 25;
   */
  bookingStatusId: number;

  /**
   * Booking flight reservation gds id.
   *
   * @generated from field: int32 flight_gds_id = 26;
   */
  flightGdsId: number;

  /**
   * Booking hotel reservation gds id.
   *
   * @generated from field: int32 hotel_gds_id = 27;
   */
  hotelGdsId: number;

  /**
   * Booking itinerary data.
   *
   * @generated from field: elude.proto.Itinerary itinerary = 28;
   */
  itinerary?: Itinerary;

  /**
   * Booking departure city data. If hotel only reservation this is null.
   *
   * @generated from field: elude.proto.City departure_city = 29;
   */
  departureCity?: City;

  /**
   * Booking arrival city data. If hotel only reservation this is hotel city.
   *
   * @generated from field: elude.proto.City arrival_city = 30;
   */
  arrivalCity?: City;

  /**
   * Booking payment method data.
   *
   * @generated from field: elude.proto.PaymentMethod payment_method = 31;
   */
  paymentMethod?: PaymentMethod;

  /**
   * List of booking travellers data.
   *
   * @generated from field: repeated elude.proto.Traveller travellers = 32;
   */
  travellers: Traveller[];

  /**
   * Booking flight reservation gds data.
   *
   * @generated from field: elude.proto.Gds flight_gds = 33;
   */
  flightGds?: Gds;

  /**
   * Booking hotel reservation gds data.
   *
   * @generated from field: elude.proto.Gds hotel_gds = 34;
   */
  hotelGds?: Gds;

  /**
   * Booking user data.
   *
   * @generated from field: elude.proto.User user = 35;
   */
  user?: User;

  /**
   * Booking status data.
   *
   * @generated from field: elude.proto.BookingStatus booking_status = 36;
   */
  bookingStatus?: BookingStatus;

  /**
   * List of booking tags data.
   *
   * @generated from field: repeated elude.proto.Tag tags = 37;
   */
  tags: Tag[];

  /**
   * List of booking travellers for specific booking.
   *
   * @generated from field: repeated elude.proto.BookingTraveller booking_travellers = 38;
   */
  bookingTravellers: BookingTraveller[];

  /**
   * Booking beginning date.
   *
   * @generated from field: elude.proto.Timestamp departure_date_timestamp = 39;
   */
  departureDateTimestamp?: Timestamp;

  /**
   * Booking end date.
   *
   * @generated from field: elude.proto.Timestamp return_date_timestamp = 40;
   */
  returnDateTimestamp?: Timestamp;

  /**
   * Booking created at timestamp.
   *
   * @generated from field: elude.proto.Timestamp created_at = 41;
   */
  createdAt?: Timestamp;

  /**
   * Booking airline reservation code.
   *
   * @generated from field: string airline_reservation_code = 42;
   */
  airlineReservationCode: string;

  /**
   * Stripe payment link.
   *
   * @generated from field: string stripe_booking_url = 43;
   */
  stripeBookingUrl: string;

  constructor(data?: PartialMessage<Booking>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Booking";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Booking;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Booking;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Booking;

  static equals(a: Booking | PlainMessage<Booking> | undefined, b: Booking | PlainMessage<Booking> | undefined): boolean;
}

/**
 * Itinerary is usually returned as part of a Booking message. Contains info about the flight and the hotel for a booking.
 *
 * @generated from message elude.proto.Itinerary
 */
export declare class Itinerary extends Message<Itinerary> {
  /**
   * Itinerary id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Itinerary airline id.
   *
   * @generated from field: int32 airline_id = 2;
   */
  airlineId: number;

  /**
   * Itinerary booking id.
   *
   * @generated from field: int32 booking_id = 3;
   */
  bookingId: number;

  /**
   * Itinerary departure flight id.
   *
   * @generated from field: int32 departure_flight_id = 4;
   */
  departureFlightId: number;

  /**
   * Itinerary return flight id.
   *
   * @generated from field: int32 return_flight_id = 5;
   */
  returnFlightId: number;

  /**
   * Itinerary currency, 3 letter currency code (eg, USD, EUR, HRK).
   *
   * @generated from field: string currency = 6;
   */
  currency: string;

  /**
   * Price amount after tax - Price amount before tax
   *
   * @generated from field: float total_amount = 7;
   */
  totalAmount: number;

  /**
   * Price amount after tax - Price amount before tax
   *
   * @generated from field: float tax_amount = 8;
   */
  taxAmount: number;

  /**
   * Price amount before tax.
   *
   * @generated from field: float base_amount = 9;
   */
  baseAmount: number;

  /**
   * Itinerary ticket number.
   *
   * @generated from field: string main_ticket_number = 10;
   */
  mainTicketNumber: string;

  /**
   * Itinerary hotel data.
   *
   * @generated from field: elude.proto.Hotel hotel = 11;
   */
  hotel?: Hotel;

  /**
   * Itinerary departure flight data.
   *
   * @generated from field: elude.proto.Flight departure_flight = 12;
   */
  departureFlight?: Flight;

  /**
   * Itinerary departure flight data.
   *
   * @generated from field: elude.proto.Flight return_flight = 13;
   */
  returnFlight?: Flight;

  /**
   * Itinerary airline data.
   *
   * @generated from field: elude.proto.Airline airline = 14;
   */
  airline?: Airline;

  /**
   * Itinerary booking data.
   *
   * @generated from field: elude.proto.Booking booking = 15;
   */
  booking?: Booking;

  constructor(data?: PartialMessage<Itinerary>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Itinerary";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Itinerary;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Itinerary;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Itinerary;

  static equals(a: Itinerary | PlainMessage<Itinerary> | undefined, b: Itinerary | PlainMessage<Itinerary> | undefined): boolean;
}

/**
 * Hotel is usually returned as part of Itinerary message. Contains info about the hotel that was booked.
 *
 * @generated from message elude.proto.Hotel
 */
export declare class Hotel extends Message<Hotel> {
  /**
   * Hotel id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Hotel address.
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * Hotel name.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Hotel reservation code
   *
   * @generated from field: string confirmation_code = 4;
   */
  confirmationCode: string;

  /**
   * Hotel description.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Hotel check in date.
   *
   * @generated from field: string check_in_date = 6 [deprecated = true];
   * @deprecated
   */
  checkInDate: string;

  /**
   * Hotel check out date.
   *
   * @generated from field: string check_out_date = 7 [deprecated = true];
   * @deprecated
   */
  checkOutDate: string;

  /**
   * Hotel 3 letter currency code (eg, USD, EUR, HRK).
   *
   * @generated from field: string currency = 8;
   */
  currency: string;

  /**
   * Price amount after tax.
   *
   * @generated from field: float total_amount = 9;
   */
  totalAmount: number;

  /**
   * Price amount after tax - Price amount before tax
   *
   * @generated from field: float tax_amount = 10;
   */
  taxAmount: number;

  /**
   * Price amount before tax.
   *
   * @generated from field: float base_amount = 11;
   */
  baseAmount: number;

  /**
   * Hotel rating (10 is highest).
   *
   * @generated from field: int32 rating = 12;
   */
  rating: number;

  /**
   * Number of hotel stars.
   *
   * @generated from field: int32 stars = 13;
   */
  stars: number;

  /**
   * Hotel itinerary id.
   *
   * @generated from field: int32 itinerary_id = 14;
   */
  itineraryId: number;

  /**
   * Hotel city id.
   *
   * @generated from field: int32 city_id = 15;
   */
  cityId: number;

  /**
   * Hotel itinerary data.
   *
   * @generated from field: elude.proto.Itinerary itinerary = 16;
   */
  itinerary?: Itinerary;

  /**
   * Hotel city data.
   *
   * @generated from field: elude.proto.City city = 17;
   */
  city?: City;

  /**
   * Hotel latitude coordinate.
   *
   * @generated from field: float latitude = 18;
   */
  latitude: number;

  /**
   * Hotel longitude coordinate.
   *
   * @generated from field: float longitude = 19;
   */
  longitude: number;

  /**
   * List of hotel rooms data.
   *
   * @generated from field: repeated elude.proto.Room rooms = 20;
   */
  rooms: Room[];

  /**
   * Hotel image url.
   *
   * @generated from field: string image_url = 21;
   */
  imageUrl: string;

  /**
   * Hotel check in date.
   *
   * @generated from field: elude.proto.Timestamp check_in_date_timestamp = 22;
   */
  checkInDateTimestamp?: Timestamp;

  /**
   * Hotel check out date.
   *
   * @generated from field: elude.proto.Timestamp check_out_date_timestamp = 23;
   */
  checkOutDateTimestamp?: Timestamp;

  constructor(data?: PartialMessage<Hotel>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Hotel";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hotel;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hotel;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hotel;

  static equals(a: Hotel | PlainMessage<Hotel> | undefined, b: Hotel | PlainMessage<Hotel> | undefined): boolean;
}

/**
 * Room is usually returned as part of Hotel message. Contains info about the specific room that was booked.
 *
 * @generated from message elude.proto.Room
 */
export declare class Room extends Message<Room> {
  /**
   * Room id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Room type (e.g. Luxury room).
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Room name
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Room description.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * If room has meal. Currently is set to false.
   *
   * @generated from field: bool meal = 5;
   */
  meal: boolean;

  /**
   * Room hotel id.
   *
   * @generated from field: int32 hotel_id = 6;
   */
  hotelId: number;

  /**
   * Room hotel data.
   *
   * @generated from field: elude.proto.Hotel hotel = 7;
   */
  hotel?: Hotel;

  constructor(data?: PartialMessage<Room>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Room";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Room;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Room;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Room;

  static equals(a: Room | PlainMessage<Room> | undefined, b: Room | PlainMessage<Room> | undefined): boolean;
}

/**
 * BookingTraveller is usually returned as part of a Booking message. Contains info about the travelers for a specific booking.
 *
 * @generated from message elude.proto.BookingTraveller
 */
export declare class BookingTraveller extends Message<BookingTraveller> {
  /**
   * Booking traveller id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Traveller id for booking traveller.
   *
   * @generated from field: int32 traveller_id = 2;
   */
  travellerId: number;

  /**
   * Booking id for booking traveller.
   *
   * @generated from field: int32 booking_id = 3;
   */
  bookingId: number;

  /**
   * Traveller data.
   *
   * @generated from field: elude.proto.Traveller traveller = 4;
   */
  traveller?: Traveller;

  /**
   * Ticket number for booking traveller.
   *
   * @generated from field: string ticket_number = 5;
   */
  ticketNumber: string;

  constructor(data?: PartialMessage<BookingTraveller>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.BookingTraveller";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BookingTraveller;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BookingTraveller;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BookingTraveller;

  static equals(a: BookingTraveller | PlainMessage<BookingTraveller> | undefined, b: BookingTraveller | PlainMessage<BookingTraveller> | undefined): boolean;
}

