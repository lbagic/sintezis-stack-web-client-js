// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/airline.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Media} from "./media_pb.js";

/**
 * Airline message is returned in responses for Airline CRUD operations. It contains all the information for Airline model.
 *
 * @generated from message elude.proto.Airline
 */
export declare class Airline extends Message<Airline> {
  /**
   * Airline id
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Airline name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Airline iata code (2 letter code e.g. B6).
   *
   * @generated from field: string iata_code = 3;
   */
  iataCode: string;

  /**
   * Airline image id in database media table.
   *
   * @generated from field: int32 image_id = 4;
   */
  imageId: number;

  /**
   * Airline media data.
   *
   * @generated from field: elude.proto.Media media = 5;
   */
  media?: Media;

  constructor(data?: PartialMessage<Airline>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Airline";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Airline;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Airline;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Airline;

  static equals(a: Airline | PlainMessage<Airline> | undefined, b: Airline | PlainMessage<Airline> | undefined): boolean;
}

