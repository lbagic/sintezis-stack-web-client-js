// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/room_view_type.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Gds} from "./gds_pb.js";

/**
 * RoomViewType message is returned in RoomViewType CRUD rpc calls and as part of the City message.
 * Contains info on a specific room view type.
 *
 * @generated from message elude.proto.RoomViewType
 */
export declare class RoomViewType extends Message<RoomViewType> {
  /**
   * Room view type id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Room view type name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Room view type code.
   *
   * @generated from field: string code = 3;
   */
  code: string;

  /**
   * Room view type gds id.
   *
   * @generated from field: int32 gds_id = 4;
   */
  gdsId: number;

  /**
   * Room view type gds data.
   *
   * @generated from field: elude.proto.Gds gds = 5;
   */
  gds?: Gds;

  constructor(data?: PartialMessage<RoomViewType>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.RoomViewType";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomViewType;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomViewType;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomViewType;

  static equals(a: RoomViewType | PlainMessage<RoomViewType> | undefined, b: RoomViewType | PlainMessage<RoomViewType> | undefined): boolean;
}

