// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/flight.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Airport, City} from "./city_pb.js";
import type {Airline} from "./airline_pb.js";
import type {Timestamp} from "../commons/timestamp_pb.js";

/**
 * Flight message is returned as part of the itinerary message. Contains info about a booked flight.
 *
 * @generated from message elude.proto.Flight
 */
export declare class Flight extends Message<Flight> {
  /**
   * Flight id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * FLight duration in minutes. Calculated by adding all flight segment durations without breaks in between.
   *
   * @generated from field: string duration = 2;
   */
  duration: string;

  /**
   * Flight type id.
   *
   * @generated from field: int32 flight_type_id = 3;
   */
  flightTypeId: number;

  /**
   * Flight departure city id.
   *
   * @generated from field: int32 departure_city_id = 4;
   */
  departureCityId: number;

  /**
   * Flight arrival city id.
   *
   * @generated from field: int32 arrival_city_id = 5;
   */
  arrivalCityId: number;

  /**
   * List of all flight segments data.
   *
   * @generated from field: repeated elude.proto.Segment segments = 6;
   */
  segments: Segment[];

  /**
   * Flight departure city data.
   *
   * @generated from field: elude.proto.City departure_city = 7;
   */
  departureCity?: City;

  /**
   * Flight arrival city data.
   *
   * @generated from field: elude.proto.City arrival_city = 8;
   */
  arrivalCity?: City;

  constructor(data?: PartialMessage<Flight>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Flight";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Flight;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Flight;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Flight;

  static equals(a: Flight | PlainMessage<Flight> | undefined, b: Flight | PlainMessage<Flight> | undefined): boolean;
}

/**
 * Segment message is returned as part of the flight message. Contains info on the segments of a specific flight.
 *
 * @generated from message elude.proto.Segment
 */
export declare class Segment extends Message<Segment> {
  /**
   * Flight segment id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Flight segment duration.
   *
   * @generated from field: string duration = 2;
   */
  duration: string;

  /**
   * Flight segment gate (e.g. 1).
   *
   * @generated from field: string gate = 3;
   */
  gate: string;

  /**
   * Flight arrival terminal (e.g. B).
   *
   * @generated from field: string arrival_terminal = 4;
   */
  arrivalTerminal: string;

  /**
   * Flight departure terminal (e.g. C).
   *
   * @generated from field: string departure_terminal = 5;
   */
  departureTerminal: string;

  /**
   * Flight segment number (e.g. 3263)
   *
   * @generated from field: string flight_number = 6;
   */
  flightNumber: string;

  /**
   * Flight segment departure date time.
   *
   * @generated from field: string departure_date_time = 7 [deprecated = true];
   * @deprecated
   */
  departureDateTime: string;

  /**
   * Flight segment arrival date time.
   *
   * @generated from field: string arrival_date_time = 8 [deprecated = true];
   * @deprecated
   */
  arrivalDateTime: string;

  /**
   * Flight segment departure airport id.
   *
   * @generated from field: int32 departure_airport_id = 9;
   */
  departureAirportId: number;

  /**
   * FLight segment arrival airport id.
   *
   * @generated from field: int32 arrival_airport_id = 10;
   */
  arrivalAirportId: number;

  /**
   * Flight segment flight id.
   *
   * @generated from field: int32 flight_id = 11;
   */
  flightId: number;

  /**
   * Flight segment departure airport data.
   *
   * @generated from field: elude.proto.Airport departure_airport = 12;
   */
  departureAirport?: Airport;

  /**
   * Flight segment arrival airport data.
   *
   * @generated from field: elude.proto.Airport arrival_airport = 13;
   */
  arrivalAirport?: Airport;

  /**
   * Flight segment flight data.
   *
   * @generated from field: elude.proto.Flight flight = 14;
   */
  flight?: Flight;

  /**
   * Flight airline id.
   *
   * @generated from field: int32 airline_id = 15;
   */
  airlineId: number;

  /**
   * Flight segment airline data.
   *
   * @generated from field: elude.proto.Airline airline = 16;
   */
  airline?: Airline;

  /**
   * Flight segment departure date time.
   *
   * @generated from field: elude.proto.Timestamp departure_date_time_timestamp = 17;
   */
  departureDateTimeTimestamp?: Timestamp;

  /**
   * Flight segment arrival date time.
   *
   * @generated from field: elude.proto.Timestamp arrival_date_time_timestamp = 18;
   */
  arrivalDateTimeTimestamp?: Timestamp;

  constructor(data?: PartialMessage<Segment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Segment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Segment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Segment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Segment;

  static equals(a: Segment | PlainMessage<Segment> | undefined, b: Segment | PlainMessage<Segment> | undefined): boolean;
}

