// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/sticker.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Media} from "./media_pb.js";

/**
 * Sticker message is returned in Sticker CRUD rpc calls. Contains info on a sticker.
 *
 * @generated from message elude.proto.Sticker
 */
export declare class Sticker extends Message<Sticker> {
  /**
   * Sticker id.
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Sticker title.
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Sticker description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Sticker image id in database media table.
   *
   * @generated from field: int32 image_id = 4;
   */
  imageId: number;

  /**
   * Sticker media data.
   *
   * @generated from field: elude.proto.Media image = 5;
   */
  image?: Media;

  constructor(data?: PartialMessage<Sticker>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Sticker";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sticker;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sticker;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sticker;

  static equals(a: Sticker | PlainMessage<Sticker> | undefined, b: Sticker | PlainMessage<Sticker> | undefined): boolean;
}

