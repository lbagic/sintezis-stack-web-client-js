// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/models/auth_provider.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * AuthProvider message is returned as an association for User and UserSocial messages. Contains information about the auth
 * provider the user is logging in through.
 *
 * @generated from message elude.proto.AuthProvider
 */
export declare class AuthProvider extends Message<AuthProvider> {
  /**
   * Auth provider id
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Auth provider name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Auth provider slug.
   *
   * @generated from field: string slug = 3;
   */
  slug: string;

  constructor(data?: PartialMessage<AuthProvider>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.AuthProvider";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthProvider;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthProvider;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthProvider;

  static equals(a: AuthProvider | PlainMessage<AuthProvider> | undefined, b: AuthProvider | PlainMessage<AuthProvider> | undefined): boolean;
}

