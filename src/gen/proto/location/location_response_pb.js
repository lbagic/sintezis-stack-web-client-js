// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/location/location_response.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {SessionInfo} from "../commons/session_info_pb.js";
import {Airport, City} from "../models/city_pb.js";
import {Status} from "../commons/status_pb.js";
import {Pagination} from "../commons/pagination_pb.js";
import {Country} from "../models/country_pb.js";
import {Airline} from "../models/airline_pb.js";
import {FeaturedLocation} from "../models/featured_location_pb.js";
import {ConnectedCity} from "../models/connected_city_pb.js";
import {Weather} from "../commons/weather_pb.js";
import {Region} from "../models/region_pb.js";
import {Location} from "../models/location_pb.js";
import {SearchLocation} from "../commons/flow_common_pb.js";
import {ShardConnections} from "../models/shard_pb.js";
import {Preference} from "../models/preference_pb.js";

/**
 * CityResponse is used for City rpc calls. Contains City data.
 *
 * @generated from message elude.proto.CityResponse
 */
export const CityResponse = proto3.makeMessageType(
  "elude.proto.CityResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "city", kind: "message", T: City },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * CitiesResponse is used for Cities rpc calls. Contains List of Cities data.
 *
 * @generated from message elude.proto.CitiesResponse
 */
export const CitiesResponse = proto3.makeMessageType(
  "elude.proto.CitiesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "cities", kind: "message", T: City, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * CountryResponse is used for Country rpc calls. Contains Country data.
 *
 * @generated from message elude.proto.CountryResponse
 */
export const CountryResponse = proto3.makeMessageType(
  "elude.proto.CountryResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "country", kind: "message", T: Country },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * CountriesResponse is used for Countries rpc calls. Contains List of Countries data.
 *
 * @generated from message elude.proto.CountriesResponse
 */
export const CountriesResponse = proto3.makeMessageType(
  "elude.proto.CountriesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "countries", kind: "message", T: Country, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * GetAverageCostResponse is used for GetAverageCost rpc call.
 *
 * @generated from message elude.proto.GetAverageCostResponse
 */
export const GetAverageCostResponse = proto3.makeMessageType(
  "elude.proto.GetAverageCostResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetDestinationCitiesResponse is used for GetDestinationCities rpc call.
 *
 * @generated from message elude.proto.GetDestinationCitiesResponse
 */
export const GetDestinationCitiesResponse = proto3.makeMessageType(
  "elude.proto.GetDestinationCitiesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetTopDestinationsResponse is used for GetTopDestinations rpc call.
 *
 * @generated from message elude.proto.GetTopDestinationsResponse
 */
export const GetTopDestinationsResponse = proto3.makeMessageType(
  "elude.proto.GetTopDestinationsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetAffordableDestinationsResponse is used for GetAffordableDestinations rpc call.
 *
 * @generated from message elude.proto.GetAffordableDestinationsResponse
 */
export const GetAffordableDestinationsResponse = proto3.makeMessageType(
  "elude.proto.GetAffordableDestinationsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * AirportResponse is used for Airport rpc calls. Contains Airport data.
 *
 * @generated from message elude.proto.AirportResponse
 */
export const AirportResponse = proto3.makeMessageType(
  "elude.proto.AirportResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "airport", kind: "message", T: Airport },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * AirportsResponse is used for Airports rpc calls. Contains List of Airports data.
 *
 * @generated from message elude.proto.AirportsResponse
 */
export const AirportsResponse = proto3.makeMessageType(
  "elude.proto.AirportsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "airports", kind: "message", T: Airport, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * AirlineResponse is used for Airline rpc calls. Contains Airline data.
 *
 * @generated from message elude.proto.AirlineResponse
 */
export const AirlineResponse = proto3.makeMessageType(
  "elude.proto.AirlineResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "airline", kind: "message", T: Airline },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * AirlineResponse is used for Airlines rpc calls. Contains List of Airlines data.
 *
 * @generated from message elude.proto.AirlinesResponse
 */
export const AirlinesResponse = proto3.makeMessageType(
  "elude.proto.AirlinesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "airlines", kind: "message", T: Airline, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * FeaturedLocationsResponse is used for FeaturedLocations rpc calls. Contains List of featured locations data.
 *
 * @generated from message elude.proto.FeaturedLocationsResponse
 */
export const FeaturedLocationsResponse = proto3.makeMessageType(
  "elude.proto.FeaturedLocationsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "featured_locations", kind: "message", T: FeaturedLocation, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * FeaturedLocationResponse is used for FeaturedLocation rpc calls. Contains FeaturedLocation data.
 *
 * @generated from message elude.proto.FeaturedLocationResponse
 */
export const FeaturedLocationResponse = proto3.makeMessageType(
  "elude.proto.FeaturedLocationResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "featured_location", kind: "message", T: FeaturedLocation },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * Currently not used.
 *
 * @generated from message elude.proto.ConnectedCitiesResponse
 */
export const ConnectedCitiesResponse = proto3.makeMessageType(
  "elude.proto.ConnectedCitiesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "connected_cities", kind: "message", T: ConnectedCity, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * Currently not used.
 *
 * @generated from message elude.proto.ConnectedCityResponse
 */
export const ConnectedCityResponse = proto3.makeMessageType(
  "elude.proto.ConnectedCityResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "connected_city", kind: "message", T: ConnectedCity },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetWeatherByCoordinatesResponse is used for GetWeatherByCoordinates rpc calls. Contains Weather data.
 *
 * @generated from message elude.proto.GetWeatherByCoordinatesResponse
 */
export const GetWeatherByCoordinatesResponse = proto3.makeMessageType(
  "elude.proto.GetWeatherByCoordinatesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "weather", kind: "message", T: Weather },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * RegionResponse is used for Region rpc calls. Contains Regiond data.
 *
 * @generated from message elude.proto.RegionResponse
 */
export const RegionResponse = proto3.makeMessageType(
  "elude.proto.RegionResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "region", kind: "message", T: Region },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * RegionsResponse is used for Regions rpc calls. Contains List of Regions data.
 *
 * @generated from message elude.proto.RegionsResponse
 */
export const RegionsResponse = proto3.makeMessageType(
  "elude.proto.RegionsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "regions", kind: "message", T: Region, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * LocationsResponse is used for Locations rpc calls. Contains List of Locations data.
 *
 * @generated from message elude.proto.LocationsResponse
 */
export const LocationsResponse = proto3.makeMessageType(
  "elude.proto.LocationsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "locations", kind: "message", T: Location, repeated: true },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * LocationResponse is used for Location rpc calls. Contains Location data.
 *
 * @generated from message elude.proto.LocationResponse
 */
export const LocationResponse = proto3.makeMessageType(
  "elude.proto.LocationResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "location", kind: "message", T: Location },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetLocationsByIdentifiersResponse is used for GetLocationsByIdentifiers rpc call. Contains Location data, List of Cites, Airports, Regions, Countries data.
 *
 * @generated from message elude.proto.GetLocationsByIdentifiersResponse
 */
export const GetLocationsByIdentifiersResponse = proto3.makeMessageType(
  "elude.proto.GetLocationsByIdentifiersResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "location", kind: "message", T: Location },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "cities", kind: "message", T: City, repeated: true },
    { no: 5, name: "airports", kind: "message", T: Airport, repeated: true },
    { no: 6, name: "regions", kind: "message", T: Region, repeated: true },
    { no: 7, name: "countries", kind: "message", T: Country, repeated: true },
  ],
);

/**
 * GetSearchLocationsResponse is used for Cities rpc calls. Contains List of Cities data.
 *
 * @generated from message elude.proto.GetSearchLocationsResponse
 */
export const GetSearchLocationsResponse = proto3.makeMessageType(
  "elude.proto.GetSearchLocationsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "locations", kind: "message", T: SearchLocation, repeated: true },
    { no: 3, name: "departure_location", kind: "message", T: SearchLocation },
    { no: 4, name: "shard_connections", kind: "message", T: ShardConnections, repeated: true },
    { no: 5, name: "total_days", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "total_travelers", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetPreferencesResponse is used for GetPreferences rpc call. Contains list of all preferences in database, list of User preferences
 *
 * @generated from message elude.proto.GetPreferencesResponse
 */
export const GetPreferencesResponse = proto3.makeMessageType(
  "elude.proto.GetPreferencesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "preferences", kind: "message", T: Preference, repeated: true },
    { no: 3, name: "user_preferences", kind: "message", T: Preference, repeated: true },
    { no: 4, name: "status", kind: "message", T: Status },
  ],
);

/**
 * UpdateUserPreferencesResponse is used for UpdateUserPreferences rpc call.
 *
 * @generated from message elude.proto.UpdateUserPreferencesResponse
 */
export const UpdateUserPreferencesResponse = proto3.makeMessageType(
  "elude.proto.UpdateUserPreferencesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetRecommendedCitiesResponse is used for GetRecommendedCities rpc call.
 *
 * @generated from message elude.proto.GetRecommendedCitiesResponse
 */
export const GetRecommendedCitiesResponse = proto3.makeMessageType(
  "elude.proto.GetRecommendedCitiesResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
    { no: 3, name: "cities", kind: "message", T: City, repeated: true },
  ],
);

