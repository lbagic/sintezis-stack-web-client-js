// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/payment/payment_response.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Auth} from "../commons/auth_pb.js";
import type {SessionInfo} from "../commons/session_info_pb.js";
import type {Status} from "../commons/status_pb.js";
import type {PaymentMethod} from "../models/user_pb.js";
import type {GDSPaymentProvider} from "../commons/flow_common_pb.js";
import type {PromotionCode} from "../models/promotion_code_pb.js";
import type {Pagination} from "../commons/pagination_pb.js";
import type {PaymentProvider} from "../models/payment_provider_pb.js";

/**
 * MakePaymentResponse is used in internal MakePayment rpc calls.
 *
 * @generated from message elude.proto.MakePaymentResponse
 */
export declare class MakePaymentResponse extends Message<MakePaymentResponse> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  constructor(data?: PartialMessage<MakePaymentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.MakePaymentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MakePaymentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MakePaymentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MakePaymentResponse;

  static equals(a: MakePaymentResponse | PlainMessage<MakePaymentResponse> | undefined, b: MakePaymentResponse | PlainMessage<MakePaymentResponse> | undefined): boolean;
}

/**
 * AddPaymentMethodResponse is used in AddPaymentMethod rpc calls.
 *
 * @generated from message elude.proto.AddPaymentMethodResponse
 */
export declare class AddPaymentMethodResponse extends Message<AddPaymentMethodResponse> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  /**
   * Payment method from payment method requests.
   *
   * @generated from field: elude.proto.PaymentMethod payment_method = 4;
   */
  paymentMethod?: PaymentMethod;

  constructor(data?: PartialMessage<AddPaymentMethodResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.AddPaymentMethodResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPaymentMethodResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPaymentMethodResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPaymentMethodResponse;

  static equals(a: AddPaymentMethodResponse | PlainMessage<AddPaymentMethodResponse> | undefined, b: AddPaymentMethodResponse | PlainMessage<AddPaymentMethodResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.CreateChargeResponse
 */
export declare class CreateChargeResponse extends Message<CreateChargeResponse> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  /**
   * Payment provider charge id for create charge.
   *
   * @generated from field: string charge_id = 4;
   */
  chargeId: string;

  /**
   * Payment provider data for create charge.
   *
   * @generated from field: elude.proto.GDSPaymentProvider provider = 5;
   */
  provider?: GDSPaymentProvider;

  /**
   * Payment method data for create charge.
   *
   * @generated from field: elude.proto.PaymentMethod payment_method = 6;
   */
  paymentMethod?: PaymentMethod;

  /**
   * Discount on total amount.
   *
   * @generated from field: int32 discounted_total_amount = 7;
   */
  discountedTotalAmount: number;

  /**
   * Promotion code used for discount.
   *
   * @generated from field: elude.proto.PromotionCode promotion_code = 8;
   */
  promotionCode?: PromotionCode;

  constructor(data?: PartialMessage<CreateChargeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.CreateChargeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateChargeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateChargeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateChargeResponse;

  static equals(a: CreateChargeResponse | PlainMessage<CreateChargeResponse> | undefined, b: CreateChargeResponse | PlainMessage<CreateChargeResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.CaptureChargeResponse
 */
export declare class CaptureChargeResponse extends Message<CaptureChargeResponse> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  /**
   * Payment provider charge id for capture charge.
   *
   * @generated from field: string charge_id = 4;
   */
  chargeId: string;

  /**
   * Promotion code id for discount.
   *
   * @generated from field: elude.proto.PromotionCode promotion_code = 5;
   */
  promotionCode?: PromotionCode;

  constructor(data?: PartialMessage<CaptureChargeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.CaptureChargeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureChargeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureChargeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureChargeResponse;

  static equals(a: CaptureChargeResponse | PlainMessage<CaptureChargeResponse> | undefined, b: CaptureChargeResponse | PlainMessage<CaptureChargeResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.RefundChargeResponse
 */
export declare class RefundChargeResponse extends Message<RefundChargeResponse> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  /**
   * Payment provider refund id for capture charge.
   *
   * @generated from field: string refund_id = 4;
   */
  refundId: string;

  constructor(data?: PartialMessage<RefundChargeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.RefundChargeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefundChargeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefundChargeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefundChargeResponse;

  static equals(a: RefundChargeResponse | PlainMessage<RefundChargeResponse> | undefined, b: RefundChargeResponse | PlainMessage<RefundChargeResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.PaymentMethodsResponse
 */
export declare class PaymentMethodsResponse extends Message<PaymentMethodsResponse> {
  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 1;
   */
  sessionInfo?: SessionInfo;

  /**
   * List of payment methods data from payment methods requests.
   *
   * @generated from field: repeated elude.proto.PaymentMethod payment_methods = 2;
   */
  paymentMethods: PaymentMethod[];

  /**
   * Used to paginate response data.
   *
   * @generated from field: elude.proto.Pagination pagination = 3;
   */
  pagination?: Pagination;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 4;
   */
  status?: Status;

  constructor(data?: PartialMessage<PaymentMethodsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PaymentMethodsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethodsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethodsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethodsResponse;

  static equals(a: PaymentMethodsResponse | PlainMessage<PaymentMethodsResponse> | undefined, b: PaymentMethodsResponse | PlainMessage<PaymentMethodsResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.PaymentMethodResponse
 */
export declare class PaymentMethodResponse extends Message<PaymentMethodResponse> {
  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 1;
   */
  sessionInfo?: SessionInfo;

  /**
   * Payment method data from payment method requests.
   *
   * @generated from field: elude.proto.PaymentMethod payment_method = 2;
   */
  paymentMethod?: PaymentMethod;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  constructor(data?: PartialMessage<PaymentMethodResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PaymentMethodResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentMethodResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentMethodResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentMethodResponse;

  static equals(a: PaymentMethodResponse | PlainMessage<PaymentMethodResponse> | undefined, b: PaymentMethodResponse | PlainMessage<PaymentMethodResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.PaymentProvidersResponse
 */
export declare class PaymentProvidersResponse extends Message<PaymentProvidersResponse> {
  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 1;
   */
  sessionInfo?: SessionInfo;

  /**
   * List of payment providers data from payment providers requests.
   *
   * @generated from field: repeated elude.proto.PaymentProvider payment_providers = 2;
   */
  paymentProviders: PaymentProvider[];

  /**
   * Used to paginate response data.
   *
   * @generated from field: elude.proto.Pagination pagination = 3;
   */
  pagination?: Pagination;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 4;
   */
  status?: Status;

  constructor(data?: PartialMessage<PaymentProvidersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PaymentProvidersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentProvidersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentProvidersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentProvidersResponse;

  static equals(a: PaymentProvidersResponse | PlainMessage<PaymentProvidersResponse> | undefined, b: PaymentProvidersResponse | PlainMessage<PaymentProvidersResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.PaymentProviderResponse
 */
export declare class PaymentProviderResponse extends Message<PaymentProviderResponse> {
  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 1;
   */
  sessionInfo?: SessionInfo;

  /**
   * Payment provider data from payment provider requests.
   *
   * @generated from field: elude.proto.PaymentProvider payment_provider = 2;
   */
  paymentProvider?: PaymentProvider;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  constructor(data?: PartialMessage<PaymentProviderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PaymentProviderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentProviderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentProviderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentProviderResponse;

  static equals(a: PaymentProviderResponse | PlainMessage<PaymentProviderResponse> | undefined, b: PaymentProviderResponse | PlainMessage<PaymentProviderResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.PromotionCodesResponse
 */
export declare class PromotionCodesResponse extends Message<PromotionCodesResponse> {
  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 1;
   */
  sessionInfo?: SessionInfo;

  /**
   * List of promotion codes data from promotion codes requests.
   *
   * @generated from field: repeated elude.proto.PromotionCode promotion_codes = 2;
   */
  promotionCodes: PromotionCode[];

  /**
   * Used to paginate response data.
   *
   * @generated from field: elude.proto.Pagination pagination = 3;
   */
  pagination?: Pagination;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 4;
   */
  status?: Status;

  constructor(data?: PartialMessage<PromotionCodesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PromotionCodesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromotionCodesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromotionCodesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromotionCodesResponse;

  static equals(a: PromotionCodesResponse | PlainMessage<PromotionCodesResponse> | undefined, b: PromotionCodesResponse | PlainMessage<PromotionCodesResponse> | undefined): boolean;
}

/**
 * @generated from message elude.proto.PromotionCodeResponse
 */
export declare class PromotionCodeResponse extends Message<PromotionCodeResponse> {
  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 1;
   */
  sessionInfo?: SessionInfo;

  /**
   * Promotion Code data from promotion code requests.
   *
   * @generated from field: elude.proto.PromotionCode promotion_code = 2;
   */
  promotionCode?: PromotionCode;

  /**
   * Required: status code.
   *
   * Status of response.
   *
   * @generated from field: elude.proto.Status status = 3;
   */
  status?: Status;

  constructor(data?: PartialMessage<PromotionCodeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.PromotionCodeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromotionCodeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromotionCodeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromotionCodeResponse;

  static equals(a: PromotionCodeResponse | PlainMessage<PromotionCodeResponse> | undefined, b: PromotionCodeResponse | PlainMessage<PromotionCodeResponse> | undefined): boolean;
}

