// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/air_hotel_reservation_search/response.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {SessionInfo} from "../commons/session_info_pb.js";
import {Location} from "../models/location_pb.js";
import {FlightOption, GDSHotel, GDSItinerary, Price, TicketInfo} from "../commons/flow_common_pb.js";
import {Status} from "../commons/status_pb.js";
import {HotelSearchTypeEnum} from "../commons/enum_pb.js";
import {Timestamp} from "../commons/timestamp_pb.js";
import {Auth} from "../commons/auth_pb.js";

/**
 * ItineraryResponse is used in all internal and external GDS search rpc calls. Used in different calls to return booking information.
 *
 * @generated from message elude.proto.ItineraryResponse
 */
export const ItineraryResponse = proto3.makeMessageType(
  "elude.proto.ItineraryResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "departure_location", kind: "message", T: Location },
    { no: 3, name: "arrival_location", kind: "message", T: Location },
    { no: 4, name: "flight_options", kind: "message", T: FlightOption, repeated: true },
    { no: 5, name: "hotels", kind: "message", T: GDSHotel, repeated: true },
    { no: 6, name: "status", kind: "message", T: Status },
    { no: 7, name: "hotel_search_type", kind: "enum", T: proto3.getEnumType(HotelSearchTypeEnum) },
  ],
);

/**
 * ReservationResponse is used in all internal and external GDS reservation rpc calls. Contains information about reservation.
 *
 * @generated from message elude.proto.ReservationResponse
 */
export const ReservationResponse = proto3.makeMessageType(
  "elude.proto.ReservationResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "hotel_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "air_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "itinerary", kind: "message", T: GDSItinerary },
    { no: 6, name: "status", kind: "message", T: Status },
    { no: 7, name: "elude_reference", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "airline_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CancelResponse is used in CancelReservation requests.
 *
 * @generated from message elude.proto.CancelResponse
 */
export const CancelResponse = proto3.makeMessageType(
  "elude.proto.CancelResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "status", kind: "message", T: Status },
  ],
);

/**
 * TicketResponse is used only in internal GDS rpc calls. TicketResponse is used in Ticket requests.
 *
 * @generated from message elude.proto.TicketResponse
 */
export const TicketResponse = proto3.makeMessageType(
  "elude.proto.TicketResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "price", kind: "message", T: Price },
    { no: 3, name: "issued_at_datetime", kind: "message", T: Timestamp },
    { no: 4, name: "ticket_infos", kind: "message", T: TicketInfo, repeated: true },
    { no: 5, name: "status", kind: "message", T: Status },
  ],
);

/**
 * VoidTicketResponse is used only in internal GDS rpc calls. Used in VoidTicket request.
 *
 * @generated from message elude.proto.VoidTicketResponse
 */
export const VoidTicketResponse = proto3.makeMessageType(
  "elude.proto.VoidTicketResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "cancel_at_datetime", kind: "message", T: Timestamp },
    { no: 3, name: "document_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetPriceResponse is used only in internal GDS rpc calls. Used to return hotel/air price requests.
 *
 * @generated from message elude.proto.GetPriceResponse
 */
export const GetPriceResponse = proto3.makeMessageType(
  "elude.proto.GetPriceResponse",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "session_info", kind: "message", T: SessionInfo },
    { no: 3, name: "hotel_price", kind: "message", T: Price },
    { no: 4, name: "flight_price", kind: "message", T: Price },
    { no: 5, name: "status", kind: "message", T: Status },
  ],
);

/**
 * RetrieveResponse is used in all internal and external GDS RetrieveReservation rpc calls. Used to retrieve hotel/air reservations.
 *
 * @generated from message elude.proto.RetrieveResponse
 */
export const RetrieveResponse = proto3.makeMessageType(
  "elude.proto.RetrieveResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "itinerary", kind: "message", T: GDSItinerary },
    { no: 4, name: "status", kind: "message", T: Status },
  ],
);

/**
 * GetAbandonTripSearchResponse is used in GetAbandonTripSearch rpc calls. Used to return a search request based on abandon trip information.
 *
 * @generated from message elude.proto.GetAbandonTripSearchResponse
 */
export const GetAbandonTripSearchResponse = proto3.makeMessageType(
  "elude.proto.GetAbandonTripSearchResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "is_cached", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "itinerary_response", kind: "message", T: ItineraryResponse },
    { no: 4, name: "status", kind: "message", T: Status },
  ],
);

/**
 * RevalidateItineraryResponse is used in all internal and external GDS RevalidateItinerary rpc calls.
 *
 * @generated from message elude.proto.RevalidateItineraryResponse
 */
export const RevalidateItineraryResponse = proto3.makeMessageType(
  "elude.proto.RevalidateItineraryResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "flight_price_difference", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "hotel_price_difference", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "status", kind: "message", T: Status },
  ],
);

/**
 * HotelDetailsResponse is used in all internal and external GDS GetHotelDetails rpc calls.
 *
 * @generated from message elude.proto.HotelDetailsResponse
 */
export const HotelDetailsResponse = proto3.makeMessageType(
  "elude.proto.HotelDetailsResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "hotel", kind: "message", T: GDSHotel },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * AbandonTripResponse is used in AbandonTrip rpc calls.
 *
 * @generated from message elude.proto.AbandonTripResponse
 */
export const AbandonTripResponse = proto3.makeMessageType(
  "elude.proto.AbandonTripResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * BuildHotelResponse is used in internal GDS BuildHotel rpc calls. Travelport gds currently not used.
 *
 * @generated from message elude.proto.BuildHotelResponse
 */
export const BuildHotelResponse = proto3.makeMessageType(
  "elude.proto.BuildHotelResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "hotel", kind: "message", T: GDSHotel },
    { no: 3, name: "status", kind: "message", T: Status },
  ],
);

/**
 * SetSearchCacheResponse is used in internal GDS SeatSearchCache rpc calls. Currently not used.
 *
 * @generated from message elude.proto.SetSearchCacheResponse
 */
export const SetSearchCacheResponse = proto3.makeMessageType(
  "elude.proto.SetSearchCacheResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "status", kind: "message", T: Status },
  ],
);

/**
 * AveragePriceResponse .
 *
 * @generated from message elude.proto.AveragePriceResponse
 */
export const AveragePriceResponse = proto3.makeMessageType(
  "elude.proto.AveragePriceResponse",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "average_flight_price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "median_hotel_price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "status", kind: "message", T: Status },
  ],
);

