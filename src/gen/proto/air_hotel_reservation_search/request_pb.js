// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/air_hotel_reservation_search/request.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {Auth} from "../commons/auth_pb.js";
import {AirRequirements, Budget, Dates, GDSBackend, GDSHotel, GDSTraveller, GDSUser, HotelRequirements, LocationsRequirements, PriceQuote, Travellers} from "../commons/flow_common_pb.js";
import {Options} from "../commons/options_pb.js";
import {SessionInfo} from "../commons/session_info_pb.js";
import {AbandonedStageEnum, BudgetTierEnum, HotelSearchTypeEnum} from "../commons/enum_pb.js";
import {PaymentMethod} from "../models/user_pb.js";
import {Status} from "../commons/status_pb.js";

/**
 * ItineraryRequest is used in all internal and external GDS search rpc calls. Used in different calls to populate the booking. Clients should only use this when using RunSearch rpc in Search service.
 *
 * @generated from message elude.proto.ItineraryRequest
 */
export const ItineraryRequest = proto3.makeMessageType(
  "elude.proto.ItineraryRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "num_results", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "travellers", kind: "message", T: Travellers },
    { no: 4, name: "budget", kind: "message", T: Budget },
    { no: 5, name: "hotel_requirements", kind: "message", T: HotelRequirements },
    { no: 6, name: "air_requirements", kind: "message", T: AirRequirements },
    { no: 7, name: "dates", kind: "message", T: Dates },
    { no: 8, name: "locations_requirements", kind: "message", T: LocationsRequirements },
    { no: 9, name: "options", kind: "message", T: Options },
    { no: 10, name: "session_info", kind: "message", T: SessionInfo },
    { no: 11, name: "priority_search", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "budget_tier", kind: "enum", T: proto3.getEnumType(BudgetTierEnum) },
    { no: 13, name: "additional_date_search", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "additional_date_search_flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "search_id_prefix", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "hotel_search_type", kind: "enum", T: proto3.getEnumType(HotelSearchTypeEnum) },
    { no: 17, name: "location_iata_codes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 18, name: "rerun", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 19, name: "air_budget", kind: "message", T: Budget },
    { no: 20, name: "hotel_budget", kind: "message", T: Budget },
  ],
);

/**
 * ReservationRequest is used in all internal and external GDS reservation rpc calls. Clients should only use this when using StreamCreateReservation
 * rpc in Reservation service.
 *
 * @generated from message elude.proto.ReservationRequest
 */
export const ReservationRequest = proto3.makeMessageType(
  "elude.proto.ReservationRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "payment_method_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "traveller_ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 9, name: "user", kind: "message", T: GDSUser },
    { no: 10, name: "payment_method", kind: "message", T: PaymentMethod },
    { no: 11, name: "travellers", kind: "message", T: GDSTraveller, repeated: true },
    { no: 12, name: "hotel_gds", kind: "message", T: GDSBackend },
    { no: 13, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 14, name: "session_info", kind: "message", T: SessionInfo },
    { no: 15, name: "promotion_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CancelRequest is used in CancelReservation requests.
 *
 * @generated from message elude.proto.CancelRequest
 */
export const CancelRequest = proto3.makeMessageType(
  "elude.proto.CancelRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "hotel_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "air_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "hotel_gds", kind: "message", T: GDSBackend },
    { no: 7, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 8, name: "session_info", kind: "message", T: SessionInfo },
    { no: 9, name: "void_tickets", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * TicketRequest is used only in internal GDS rpc calls. Used in Ticket request. Clients should not use this.
 *
 * @generated from message elude.proto.TicketRequest
 */
export const TicketRequest = proto3.makeMessageType(
  "elude.proto.TicketRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "gds", kind: "message", T: GDSBackend },
    { no: 4, name: "session_info", kind: "message", T: SessionInfo },
    { no: 5, name: "air_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "price_quotes", kind: "message", T: PriceQuote, repeated: true },
  ],
);

/**
 * VoidTicketRequest is used only in internal GDS rpc calls. Used in VoidTicket request. Clients should not use this.
 *
 * @generated from message elude.proto.VoidTicketRequest
 */
export const VoidTicketRequest = proto3.makeMessageType(
  "elude.proto.VoidTicketRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "gds", kind: "message", T: GDSBackend },
    { no: 4, name: "session_info", kind: "message", T: SessionInfo },
    { no: 5, name: "air_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "ticket_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * GetPriceRequest is used only in internal GDS rpc calls. Used to get hotel/air price requests. Clients should not use this.
 *
 * @generated from message elude.proto.GetPriceRequest
 */
export const GetPriceRequest = proto3.makeMessageType(
  "elude.proto.GetPriceRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "hotel_gds", kind: "message", T: GDSBackend },
    { no: 7, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 8, name: "session_info", kind: "message", T: SessionInfo },
  ],
);

/**
 * RetrieveRequest is used in all internal and external GDS RetrieveReservation rpc calls. Used to retrieve hotel/air reservations.
 * Clients should only use this when using RetrieveReservation rpc in Reservation service.
 *
 * @generated from message elude.proto.RetrieveRequest
 */
export const RetrieveRequest = proto3.makeMessageType(
  "elude.proto.RetrieveRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "booking_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "hotel_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "air_reservation_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "hotel_gds", kind: "message", T: GDSBackend },
    { no: 7, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 8, name: "session_info", kind: "message", T: SessionInfo },
  ],
);

/**
 * GetAbandonTripSearchRequest is used in GetAbandonTripSearch rpc calls. Used to make a search request based on abandon trip information.
 *
 * @generated from message elude.proto.GetAbandonTripSearchRequest
 */
export const GetAbandonTripSearchRequest = proto3.makeMessageType(
  "elude.proto.GetAbandonTripSearchRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "session_info", kind: "message", T: SessionInfo },
    { no: 3, name: "itinerary_request", kind: "message", T: ItineraryRequest },
    { no: 4, name: "flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 7, name: "hotel_gds", kind: "message", T: GDSBackend },
    { no: 8, name: "abandoned_stage", kind: "enum", T: proto3.getEnumType(AbandonedStageEnum) },
    { no: 9, name: "options", kind: "message", T: Options },
  ],
);

/**
 * RevalidateItineraryRequest is used in all internal and external GDS RevalidateItinerary rpc calls.
 * Clients should only use this when using RevalidateItinerary rpc in Reservation service.
 *
 * @generated from message elude.proto.RevalidateItineraryRequest
 */
export const RevalidateItineraryRequest = proto3.makeMessageType(
  "elude.proto.RevalidateItineraryRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "options", kind: "message", T: Options },
    { no: 3, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "hotel_gds", kind: "message", T: GDSBackend },
    { no: 7, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 8, name: "travellers", kind: "message", T: GDSTraveller, repeated: true },
    { no: 9, name: "session_info", kind: "message", T: SessionInfo },
    { no: 10, name: "traveller_ids", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ],
);

/**
 * HotelDetailsRequest is used in all internal and external GDS GetHotelDetails rpc calls.
 * Clients should only use this when using GetHotelDetails rpc in Search service.
 *
 * @generated from message elude.proto.HotelDetailsRequest
 */
export const HotelDetailsRequest = proto3.makeMessageType(
  "elude.proto.HotelDetailsRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "session_info", kind: "message", T: SessionInfo },
    { no: 3, name: "gds", kind: "message", T: GDSBackend },
    { no: 4, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "options", kind: "message", T: Options },
  ],
);

/**
 * AbandonTripRequest is used in AbandonTrip rpc calls.
 *
 * @generated from message elude.proto.AbandonTripRequest
 */
export const AbandonTripRequest = proto3.makeMessageType(
  "elude.proto.AbandonTripRequest",
  () => [
    { no: 1, name: "auth", kind: "message", T: Auth },
    { no: 2, name: "session_info", kind: "message", T: SessionInfo },
    { no: 5, name: "dates", kind: "message", T: Dates },
    { no: 6, name: "travellers", kind: "message", T: Travellers },
    { no: 7, name: "budget", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "flight_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "hotel_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "room_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "abandoned_stage", kind: "enum", T: proto3.getEnumType(AbandonedStageEnum) },
    { no: 12, name: "options", kind: "message", T: Options },
    { no: 13, name: "air_requirements", kind: "message", T: AirRequirements },
    { no: 14, name: "hotel_requirements", kind: "message", T: HotelRequirements },
    { no: 15, name: "locations_requirements", kind: "message", T: LocationsRequirements },
    { no: 16, name: "budget_tier", kind: "enum", T: proto3.getEnumType(BudgetTierEnum) },
    { no: 17, name: "search_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * BuildHotelRequest is used in internal GDS BuildHotel rpc calls. Travelport gds currently not used.
 *
 * @generated from message elude.proto.BuildHotelRequest
 */
export const BuildHotelRequest = proto3.makeMessageType(
  "elude.proto.BuildHotelRequest",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "hotel", kind: "message", T: GDSHotel },
    { no: 3, name: "travellers", kind: "message", T: Travellers },
    { no: 4, name: "budget", kind: "message", T: Budget },
    { no: 5, name: "status", kind: "message", T: Status },
    { no: 6, name: "options", kind: "message", T: Options },
  ],
);

/**
 * SetSearchCacheRequest is used in internal GDS SeatSearchCache rpc calls. Currently not used.
 *
 * @generated from message elude.proto.SetSearchCacheRequest
 */
export const SetSearchCacheRequest = proto3.makeMessageType(
  "elude.proto.SetSearchCacheRequest",
  () => [
    { no: 1, name: "session_info", kind: "message", T: SessionInfo },
    { no: 2, name: "flight_gds", kind: "message", T: GDSBackend },
    { no: 3, name: "status", kind: "message", T: Status },
    { no: 4, name: "options", kind: "message", T: Options },
  ],
);

