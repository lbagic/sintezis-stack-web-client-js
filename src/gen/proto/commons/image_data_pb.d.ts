// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/commons/image_data.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Auth} from "./auth_pb.js";
import type {SessionInfo} from "./session_info_pb.js";
import type {City} from "../models/city_pb.js";
import type {Media} from "../models/media_pb.js";
import type {Options} from "./options_pb.js";
import type {Airline} from "../models/airline_pb.js";
import type {Sticker} from "../models/sticker_pb.js";
import type {Amenity} from "../models/amenity_pb.js";

/**
 * UpdateCityWithImageData is the data part of UpdateCityWithImageRequest
 *
 * @generated from message elude.proto.UpdateCityWithImageData
 */
export declare class UpdateCityWithImageData extends Message<UpdateCityWithImageData> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * City data for update city with image.
   *
   * @generated from field: elude.proto.City city = 3;
   */
  city?: City;

  /**
   * Media data for update city with image.
   *
   * @generated from field: elude.proto.Media media = 4;
   */
  media?: Media;

  /**
   * Common options for request.
   *
   * @generated from field: elude.proto.Options options = 5;
   */
  options?: Options;

  constructor(data?: PartialMessage<UpdateCityWithImageData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.UpdateCityWithImageData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCityWithImageData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCityWithImageData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCityWithImageData;

  static equals(a: UpdateCityWithImageData | PlainMessage<UpdateCityWithImageData> | undefined, b: UpdateCityWithImageData | PlainMessage<UpdateCityWithImageData> | undefined): boolean;
}

/**
 * UpdateAirlineWithImageData is the data part of UpdateAirlineWithImageRequest
 *
 * @generated from message elude.proto.UpdateAirlineWithImageData
 */
export declare class UpdateAirlineWithImageData extends Message<UpdateAirlineWithImageData> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Airline data for update airline with image.
   *
   * @generated from field: elude.proto.Airline airline = 3;
   */
  airline?: Airline;

  /**
   * Media data for update airline with image.
   *
   * @generated from field: elude.proto.Media media = 4;
   */
  media?: Media;

  /**
   * Common options for request.
   *
   * @generated from field: elude.proto.Options options = 5;
   */
  options?: Options;

  constructor(data?: PartialMessage<UpdateAirlineWithImageData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.UpdateAirlineWithImageData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAirlineWithImageData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAirlineWithImageData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAirlineWithImageData;

  static equals(a: UpdateAirlineWithImageData | PlainMessage<UpdateAirlineWithImageData> | undefined, b: UpdateAirlineWithImageData | PlainMessage<UpdateAirlineWithImageData> | undefined): boolean;
}

/**
 * UpdateStickerWithImageData is the data part of UpdateStickerWithImageRequest
 *
 * @generated from message elude.proto.UpdateStickerWithImageData
 */
export declare class UpdateStickerWithImageData extends Message<UpdateStickerWithImageData> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Sticker data for update sticker with image.
   *
   * @generated from field: elude.proto.Sticker sticker = 3;
   */
  sticker?: Sticker;

  /**
   * Media data for update sticker with image.
   *
   * @generated from field: elude.proto.Media media = 4;
   */
  media?: Media;

  /**
   * Common options for request.
   *
   * @generated from field: elude.proto.Options options = 5;
   */
  options?: Options;

  constructor(data?: PartialMessage<UpdateStickerWithImageData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.UpdateStickerWithImageData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateStickerWithImageData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateStickerWithImageData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateStickerWithImageData;

  static equals(a: UpdateStickerWithImageData | PlainMessage<UpdateStickerWithImageData> | undefined, b: UpdateStickerWithImageData | PlainMessage<UpdateStickerWithImageData> | undefined): boolean;
}

/**
 * UpdateAmenityWithImageData is the data part of UpdateAmenityWithImageRequest
 *
 * @generated from message elude.proto.UpdateAmenityWithImageData
 */
export declare class UpdateAmenityWithImageData extends Message<UpdateAmenityWithImageData> {
  /**
   * Used to authorize the request.
   *
   * @generated from field: elude.proto.Auth auth = 1;
   */
  auth?: Auth;

  /**
   * Session information.
   *
   * @generated from field: elude.proto.SessionInfo session_info = 2;
   */
  sessionInfo?: SessionInfo;

  /**
   * Amenity data for update amenity with image.
   *
   * @generated from field: elude.proto.Amenity amenity = 3;
   */
  amenity?: Amenity;

  /**
   * Media data for update amenity with image.
   *
   * @generated from field: elude.proto.Media media = 4;
   */
  media?: Media;

  /**
   * Common options for request.
   *
   * @generated from field: elude.proto.Options options = 5;
   */
  options?: Options;

  constructor(data?: PartialMessage<UpdateAmenityWithImageData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.UpdateAmenityWithImageData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAmenityWithImageData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAmenityWithImageData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAmenityWithImageData;

  static equals(a: UpdateAmenityWithImageData | PlainMessage<UpdateAmenityWithImageData> | undefined, b: UpdateAmenityWithImageData | PlainMessage<UpdateAmenityWithImageData> | undefined): boolean;
}

