// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/commons/flow_common.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {BookingClassEnum, GDSEnum, HotelSearchTypeEnum, LocationTypeEnum, PaymentProvidersEnum, PriorityEnum, TravellerTypeEnum} from "./enum_pb.js";
import {Timestamp} from "./timestamp_pb.js";
import {Coordinates} from "./coordinates_pb.js";
import {Airline} from "../models/airline_pb.js";
import {Airport, Property} from "../models/city_pb.js";
import {LocationMetadata} from "./metadata_pb.js";

/**
 * User specified budget
 *
 * @generated from message elude.proto.Budget
 */
export const Budget = proto3.makeMessageType(
  "elude.proto.Budget",
  () => [
    { no: 1, name: "min_price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "max_price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "absolute_max_price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Date used for departure date and return date pairs
 *
 * @generated from message elude.proto.Date
 */
export const Date = proto3.makeMessageType(
  "elude.proto.Date",
  () => [
    { no: 1, name: "year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "day", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Contains departure and return dates
 *
 * @generated from message elude.proto.Dates
 */
export const Dates = proto3.makeMessageType(
  "elude.proto.Dates",
  () => [
    { no: 1, name: "departure", kind: "message", T: Date },
    { no: 2, name: "return", kind: "message", T: Date },
  ],
);

/**
 * GDS provider message to be used only in GDS rpc calls
 *
 * @generated from message elude.proto.GDSBackend
 */
export const GDSBackend = proto3.makeMessageType(
  "elude.proto.GDSBackend",
  () => [
    { no: 1, name: "name", kind: "enum", T: proto3.getEnumType(GDSEnum) },
    { no: 2, name: "priority", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "timeout_ms", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Payment provider message to be used only in GDS rpc calls
 *
 * @generated from message elude.proto.GDSPaymentProvider
 */
export const GDSPaymentProvider = proto3.makeMessageType(
  "elude.proto.GDSPaymentProvider",
  () => [
    { no: 1, name: "name", kind: "enum", T: proto3.getEnumType(PaymentProvidersEnum) },
  ],
);

/**
 * Currently not used.
 *
 * @generated from message elude.proto.GDSOptions
 */
export const GDSOptions = proto3.makeMessageType(
  "elude.proto.GDSOptions",
  () => [
    { no: 1, name: "air_backends", kind: "message", T: GDSBackend, repeated: true },
    { no: 2, name: "hotel_backends", kind: "message", T: GDSBackend, repeated: true },
  ],
);

/**
 * Hotel message to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.GDSHotel
 */
export const GDSHotel = proto3.makeMessageType(
  "elude.proto.GDSHotel",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "chain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "rating", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "check_in_datetime", kind: "message", T: Timestamp },
    { no: 10, name: "check_out_datetime", kind: "message", T: Timestamp },
    { no: 11, name: "coordinates", kind: "message", T: Coordinates },
    { no: 12, name: "telephones", kind: "message", T: Telephone, repeated: true },
    { no: 13, name: "amenities", kind: "message", T: GDSAmenity, repeated: true },
    { no: 14, name: "media", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 15, name: "rooms", kind: "message", T: GDSRoom, repeated: true },
    { no: 16, name: "gds", kind: "message", T: GDSBackend },
    { no: 17, name: "confirmation_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "rate_source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "priority", kind: "enum", T: proto3.getEnumType(PriorityEnum) },
    { no: 20, name: "hotel_search_type", kind: "enum", T: proto3.getEnumType(HotelSearchTypeEnum) },
  ],
);

/**
 * Telephone message to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.Telephone
 */
export const Telephone = proto3.makeMessageType(
  "elude.proto.Telephone",
  () => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Room message to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.GDSRoom
 */
export const GDSRoom = proto3.makeMessageType(
  "elude.proto.GDSRoom",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "is_refundable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "breakfast_included", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "payment_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "amenities", kind: "message", T: GDSAmenity, repeated: true },
    { no: 8, name: "price", kind: "message", T: Price },
  ],
);

/**
 * Amenity message to be used only in GDS rpc calls. Amenities are stored in database and listed by amenity codes.
 *
 * @generated from message elude.proto.GDSAmenity
 */
export const GDSAmenity = proto3.makeMessageType(
  "elude.proto.GDSAmenity",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "image_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Contains info for a specific traveller, to be used only in GDS rpc calls
 *
 * @generated from message elude.proto.TravellerInfo
 */
export const TravellerInfo = proto3.makeMessageType(
  "elude.proto.TravellerInfo",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "price", kind: "message", T: Price },
    { no: 2, name: "traveller_type", kind: "enum", T: proto3.getEnumType(TravellerTypeEnum) },
    { no: 4, name: "ticket_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Contains quantity for each traveller type, to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.Travellers
 */
export const Travellers = proto3.makeMessageType(
  "elude.proto.Travellers",
  () => [
    { no: 1, name: "adults", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "children", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "infants", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Flight message to be used only in GDS rpc calls. Contains all flight segments.
 *
 * @generated from message elude.proto.GDSFlight
 */
export const GDSFlight = proto3.makeMessageType(
  "elude.proto.GDSFlight",
  () => [
    { no: 1, name: "duration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "flight_segments", kind: "message", T: GDSFlightSegment, repeated: true },
  ],
);

/**
 * Flight segment message to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.GDSFlightSegment
 */
export const GDSFlightSegment = proto3.makeMessageType(
  "elude.proto.GDSFlightSegment",
  () => [
    { no: 1, name: "airline", kind: "message", T: Airline },
    { no: 2, name: "duration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "flight_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "departure_datetime", kind: "message", T: Timestamp },
    { no: 5, name: "arrival_datetime", kind: "message", T: Timestamp },
    { no: 6, name: "departure_airports", kind: "message", T: Airport },
    { no: 7, name: "arrival_airports", kind: "message", T: Airport },
    { no: 8, name: "departure_utc_offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "arrival_utc_offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "departure_terminal", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "arrival_terminal", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "operating_airline_iata_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Contains info on the flight options returned after a GDS flight search.
 *
 * @generated from message elude.proto.FlightOption
 */
export const FlightOption = proto3.makeMessageType(
  "elude.proto.FlightOption",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "dates", kind: "message", T: Dates },
    { no: 3, name: "departure_flight", kind: "message", T: GDSFlight },
    { no: 4, name: "return_flight", kind: "message", T: GDSFlight },
    { no: 5, name: "price", kind: "message", T: Price },
    { no: 6, name: "traveller_info", kind: "message", T: TravellerInfo, repeated: true },
    { no: 7, name: "gds", kind: "message", T: GDSBackend },
  ],
);

/**
 * Hotel requirements when making a GDS hotel search.
 *
 * @generated from message elude.proto.HotelRequirements
 */
export const HotelRequirements = proto3.makeMessageType(
  "elude.proto.HotelRequirements",
  () => [
    { no: 1, name: "min_stars", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "amenities", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "disable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "max_stars", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Air requirements when making a GDS flight search.
 *
 * @generated from message elude.proto.AirRequirements
 */
export const AirRequirements = proto3.makeMessageType(
  "elude.proto.AirRequirements",
  () => [
    { no: 1, name: "booking_class", kind: "enum", T: proto3.getEnumType(BookingClassEnum) },
    { no: 2, name: "disabled_airlines", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "disable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Location identifier is used to unite different location types in one structure.
 *
 * @generated from message elude.proto.LocationIdentifier
 */
export const LocationIdentifier = proto3.makeMessageType(
  "elude.proto.LocationIdentifier",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "location_type", kind: "enum", T: proto3.getEnumType(LocationTypeEnum) },
    { no: 3, name: "iata_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "location_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "priority_hotels_sabre", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "image_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "hotel_address_search", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "metadata", kind: "message", T: LocationMetadata },
    { no: 10, name: "shard_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Locations requirements when making a GDS search.
 *
 * @generated from message elude.proto.LocationsRequirements
 */
export const LocationsRequirements = proto3.makeMessageType(
  "elude.proto.LocationsRequirements",
  () => [
    { no: 1, name: "departure", kind: "message", T: LocationIdentifier },
    { no: 2, name: "destinations", kind: "message", T: LocationIdentifier, repeated: true },
    { no: 3, name: "blacklisted_cities", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * Price quote is a fixed price from gds.
 *
 * @generated from message elude.proto.PriceQuote
 */
export const PriceQuote = proto3.makeMessageType(
  "elude.proto.PriceQuote",
  () => [
    { no: 1, name: "identifier", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * Price of an Itinerary.
 *
 * @generated from message elude.proto.Price
 */
export const Price = proto3.makeMessageType(
  "elude.proto.Price",
  () => [
    { no: 1, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "base", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "tax", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "agent_fee", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 6, name: "base_price_difference", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * Contains information about a complete GDS itinerary.
 *
 * @generated from message elude.proto.GDSItinerary
 */
export const GDSItinerary = proto3.makeMessageType(
  "elude.proto.GDSItinerary",
  () => [
    { no: 1, name: "flight_option", kind: "message", T: FlightOption },
    { no: 2, name: "hotel", kind: "message", T: GDSHotel },
    { no: 3, name: "price", kind: "message", T: Price },
    { no: 4, name: "travellers", kind: "message", T: GDSTraveller, repeated: true },
    { no: 5, name: "user", kind: "message", T: GDSUser },
    { no: 6, name: "dates", kind: "message", T: Dates },
    { no: 7, name: "departure_location", kind: "message", T: LocationIdentifier },
    { no: 8, name: "destination_location", kind: "message", T: LocationIdentifier },
    { no: 9, name: "price_quotes", kind: "message", T: PriceQuote, repeated: true },
  ],
);

/**
 * Traveller message to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.GDSTraveller
 */
export const GDSTraveller = proto3.makeMessageType(
  "elude.proto.GDSTraveller",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "date_of_birth", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "traveler_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * User message to be used only in GDS rpc calls.
 *
 * @generated from message elude.proto.GDSUser
 */
export const GDSUser = proto3.makeMessageType(
  "elude.proto.GDSUser",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "date_of_birth", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "country_iso", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Ticker info is used to track travellers ticket document numbers.
 *
 * @generated from message elude.proto.TicketInfo
 */
export const TicketInfo = proto3.makeMessageType(
  "elude.proto.TicketInfo",
  () => [
    { no: 1, name: "traveller_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "document_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Search location is used as basic location structure while searching other locations.
 *
 * @generated from message elude.proto.SearchLocation
 */
export const SearchLocation = proto3.makeMessageType(
  "elude.proto.SearchLocation",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "image_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "iata_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "location_type", kind: "enum", T: proto3.getEnumType(LocationTypeEnum) },
    { no: 6, name: "properties", kind: "message", T: Property, repeated: true },
    { no: 7, name: "sublocations", kind: "message", T: SearchLocation, repeated: true },
    { no: 8, name: "connected_city_iata_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "metadata", kind: "message", T: LocationMetadata },
    { no: 11, name: "connected_location", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "median_hotel_price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "shard_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

