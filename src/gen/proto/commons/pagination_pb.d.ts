// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/commons/pagination.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * Pagination is used in GetAll requests that have a large number of results. CLients should set page and page_size.
 *
 * @generated from message elude.proto.Pagination
 */
export declare class Pagination extends Message<Pagination> {
  /**
   * Pagination page. Clients set this.
   *
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * Pagination page size. How many items can fit on one page. Clients set this.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Number of total items. Clients do not set this.
   *
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * Number of total pages to display all items. Clients do not set this.
   *
   * @generated from field: int32 total_pages = 4;
   */
  totalPages: number;

  /**
   * If true selected pagination does not apply.
   *
   * @generated from field: bool override_pagination = 5;
   */
  overridePagination: boolean;

  constructor(data?: PartialMessage<Pagination>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Pagination";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Pagination;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Pagination;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Pagination;

  static equals(a: Pagination | PlainMessage<Pagination> | undefined, b: Pagination | PlainMessage<Pagination> | undefined): boolean;
}

