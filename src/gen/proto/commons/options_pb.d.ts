// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/commons/options.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * Options are sent with every request, and contain common options such as timeout and max size.
 *
 * @generated from message elude.proto.Options
 */
export declare class Options extends Message<Options> {
  /**
   * This timeout will be in milliseconds.
   *
   * @generated from field: int32 timeout_ms = 1;
   */
  timeoutMs: number;

  /**
   * This is the the maximum total data that we send back e.g. 1000 bytes.
   *
   * @generated from field: int32 max_size_bytes = 2;
   */
  maxSizeBytes: number;

  constructor(data?: PartialMessage<Options>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Options";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Options;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Options;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Options;

  static equals(a: Options | PlainMessage<Options> | undefined, b: Options | PlainMessage<Options> | undefined): boolean;
}

