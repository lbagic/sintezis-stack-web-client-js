// @generated by protoc-gen-es v0.1.1 with parameter "target=js+dts"
// @generated from file proto/commons/weather.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * Weather contains information about the current weather for a specific city/coordinates. Uses Open Weather.
 *
 * @generated from message elude.proto.Weather
 */
export declare class Weather extends Message<Weather> {
  /**
   * Weather title (e.g. Rain)
   *
   * @generated from field: string weather = 1;
   */
  weather: string;

  /**
   * Weather description (e.g. light rain)
   *
   * @generated from field: string weather_description = 2;
   */
  weatherDescription: string;

  /**
   * Weather temperature in celsius
   *
   * @generated from field: float current_temperature = 3;
   */
  currentTemperature: number;

  /**
   * Weather humidity (e.g. 81 -> 81%)
   *
   * @generated from field: int32 humidity = 4;
   */
  humidity: number;

  constructor(data?: PartialMessage<Weather>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "elude.proto.Weather";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Weather;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Weather;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Weather;

  static equals(a: Weather | PlainMessage<Weather> | undefined, b: Weather | PlainMessage<Weather> | undefined): boolean;
}

