// @generated by protoc-gen-connect-web v0.2.1 with parameter "target=js+dts"
// @generated from file services/auth_service.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {AddSocialRequest, AuthRequest, ChangePasswordRequest, CheckAdditionalPermissionRequest, CheckPermissionRequest, CreateRoleRequest, CreateUserRequest, DeleteRoleRequest, DeleteUserRequest, GetPermissionsRequest, GetRoleRequest, GetRolesRequest, GetTitlesRequest, GetUserRequest, GetUsersRequest, LoginRequest, PasswordRecoverRequest, PasswordResetRequest, RegisterRequest, ResendConfirmationEmailRequest, UpdateRoleRequest, UpdateUserRequest, ValidateJwtTokenRequest, VerifyEmailRequest, VerifyRecoveryTokenRequest} from "../proto/auth/auth_request_pb.js";
import {AccountResponse, AddSocialResponse, AuthResponse, CheckPermissionResponse, PermissionsResponse, RoleResponse, RolesResponse, TitlesResponse, UserResponse, UsersResponse, ValidateJwtTokenResponse} from "../proto/auth/auth_response_pb.js";
import {MethodKind} from "@bufbuild/protobuf";
import {SendEmailsResponse} from "../proto/booking/booking_response_pb.js";

/**
 * @generated from service elude.proto.AuthController
 */
export const AuthController = {
  typeName: "elude.proto.AuthController",
  methods: {
    /**
     * @generated from rpc elude.proto.AuthController.Authorize
     */
    authorize: {
      name: "Authorize",
      I: AuthRequest,
      O: AuthResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.CheckPermission
     */
    checkPermission: {
      name: "CheckPermission",
      I: CheckPermissionRequest,
      O: CheckPermissionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.CheckAdditionalPermission
     */
    checkAdditionalPermission: {
      name: "CheckAdditionalPermission",
      I: CheckAdditionalPermissionRequest,
      O: CheckPermissionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.Register
     */
    register: {
      name: "Register",
      I: RegisterRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.Login
     */
    login: {
      name: "Login",
      I: LoginRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.VerifyEmail
     */
    verifyEmail: {
      name: "VerifyEmail",
      I: VerifyEmailRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.PasswordRecover
     */
    passwordRecover: {
      name: "PasswordRecover",
      I: PasswordRecoverRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.PasswordReset
     */
    passwordReset: {
      name: "PasswordReset",
      I: PasswordResetRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.VerifyRecoveryToken
     */
    verifyRecoveryToken: {
      name: "VerifyRecoveryToken",
      I: VerifyRecoveryTokenRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.GetUsers
     */
    getUsers: {
      name: "GetUsers",
      I: GetUsersRequest,
      O: UsersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.CreateUser
     */
    createUser: {
      name: "CreateUser",
      I: CreateUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.UpdateUser
     */
    updateUser: {
      name: "UpdateUser",
      I: UpdateUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.DeleteUser
     */
    deleteUser: {
      name: "DeleteUser",
      I: DeleteUserRequest,
      O: UserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.ChangePassword
     */
    changePassword: {
      name: "ChangePassword",
      I: ChangePasswordRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.AddSocial
     */
    addSocial: {
      name: "AddSocial",
      I: AddSocialRequest,
      O: AddSocialResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.GetTitles
     */
    getTitles: {
      name: "GetTitles",
      I: GetTitlesRequest,
      O: TitlesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.GetRoles
     */
    getRoles: {
      name: "GetRoles",
      I: GetRolesRequest,
      O: RolesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.GetRole
     */
    getRole: {
      name: "GetRole",
      I: GetRoleRequest,
      O: RoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.CreateRole
     */
    createRole: {
      name: "CreateRole",
      I: CreateRoleRequest,
      O: RoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.UpdateRole
     */
    updateRole: {
      name: "UpdateRole",
      I: UpdateRoleRequest,
      O: RoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.DeleteRole
     */
    deleteRole: {
      name: "DeleteRole",
      I: DeleteRoleRequest,
      O: RoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.GetPermissions
     */
    getPermissions: {
      name: "GetPermissions",
      I: GetPermissionsRequest,
      O: PermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.ValidateJwtToken
     */
    validateJwtToken: {
      name: "ValidateJwtToken",
      I: ValidateJwtTokenRequest,
      O: ValidateJwtTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AuthController.ResendConfirmationEmail
     */
    resendConfirmationEmail: {
      name: "ResendConfirmationEmail",
      I: ResendConfirmationEmailRequest,
      O: SendEmailsResponse,
      kind: MethodKind.Unary,
    },
  }
};

