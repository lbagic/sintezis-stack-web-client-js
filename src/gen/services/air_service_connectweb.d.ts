// @generated by protoc-gen-connect-web v0.2.1 with parameter "target=js+dts"
// @generated from file services/air_service.proto (package elude.proto, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {CancelRequest, GetAbandonTripSearchRequest, GetPriceRequest, ItineraryRequest, ReservationRequest, RetrieveRequest, RevalidateItineraryRequest, SetSearchCacheRequest, TicketRequest, VoidTicketRequest} from "../proto/air_hotel_reservation_search/request_pb.js";
import {CancelResponse, GetAbandonTripSearchResponse, GetPriceResponse, ItineraryResponse, ReservationResponse, RetrieveResponse, RevalidateItineraryResponse, SetSearchCacheResponse, TicketResponse, VoidTicketResponse} from "../proto/air_hotel_reservation_search/response_pb.js";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * It will send a request to multiple GDS provider and then stream back responses
 *
 * @generated from service elude.proto.AirController
 */
export declare const AirController: {
  readonly typeName: "elude.proto.AirController",
  readonly methods: {
    /**
     * @generated from rpc elude.proto.AirController.RunAirSearch
     */
    readonly runAirSearch: {
      readonly name: "RunAirSearch",
      readonly I: typeof ItineraryRequest,
      readonly O: typeof ItineraryResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc elude.proto.AirController.CreateReservation
     */
    readonly createReservation: {
      readonly name: "CreateReservation",
      readonly I: typeof ReservationRequest,
      readonly O: typeof ReservationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.StreamCreateReservation
     */
    readonly streamCreateReservation: {
      readonly name: "StreamCreateReservation",
      readonly I: typeof ReservationRequest,
      readonly O: typeof ReservationResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc elude.proto.AirController.CancelReservation
     */
    readonly cancelReservation: {
      readonly name: "CancelReservation",
      readonly I: typeof CancelRequest,
      readonly O: typeof CancelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.TicketFlight
     */
    readonly ticketFlight: {
      readonly name: "TicketFlight",
      readonly I: typeof TicketRequest,
      readonly O: typeof TicketResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.VoidTicket
     */
    readonly voidTicket: {
      readonly name: "VoidTicket",
      readonly I: typeof VoidTicketRequest,
      readonly O: typeof VoidTicketResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.GetPrice
     */
    readonly getPrice: {
      readonly name: "GetPrice",
      readonly I: typeof GetPriceRequest,
      readonly O: typeof GetPriceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.RetrieveReservation
     */
    readonly retrieveReservation: {
      readonly name: "RetrieveReservation",
      readonly I: typeof RetrieveRequest,
      readonly O: typeof RetrieveResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.GetAbandonTripSearch
     */
    readonly getAbandonTripSearch: {
      readonly name: "GetAbandonTripSearch",
      readonly I: typeof GetAbandonTripSearchRequest,
      readonly O: typeof GetAbandonTripSearchResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.RevalidateItinerary
     */
    readonly revalidateItinerary: {
      readonly name: "RevalidateItinerary",
      readonly I: typeof RevalidateItineraryRequest,
      readonly O: typeof RevalidateItineraryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirController.SetSearchCache
     */
    readonly setSearchCache: {
      readonly name: "SetSearchCache",
      readonly I: typeof SetSearchCacheRequest,
      readonly O: typeof SetSearchCacheResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

/**
 * Generic server that can work with all of the adapter
 *
 * @generated from service elude.proto.AirAdapter
 */
export declare const AirAdapter: {
  readonly typeName: "elude.proto.AirAdapter",
  readonly methods: {
    /**
     * @generated from rpc elude.proto.AirAdapter.GetFlightOption
     */
    readonly getFlightOption: {
      readonly name: "GetFlightOption",
      readonly I: typeof ItineraryRequest,
      readonly O: typeof ItineraryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.CreateReservation
     */
    readonly createReservation: {
      readonly name: "CreateReservation",
      readonly I: typeof ReservationRequest,
      readonly O: typeof ReservationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.CancelReservation
     */
    readonly cancelReservation: {
      readonly name: "CancelReservation",
      readonly I: typeof CancelRequest,
      readonly O: typeof CancelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.TicketFlight
     */
    readonly ticketFlight: {
      readonly name: "TicketFlight",
      readonly I: typeof TicketRequest,
      readonly O: typeof TicketResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.VoidTicket
     */
    readonly voidTicket: {
      readonly name: "VoidTicket",
      readonly I: typeof VoidTicketRequest,
      readonly O: typeof VoidTicketResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.GetPrice
     */
    readonly getPrice: {
      readonly name: "GetPrice",
      readonly I: typeof GetPriceRequest,
      readonly O: typeof GetPriceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.RetrieveReservation
     */
    readonly retrieveReservation: {
      readonly name: "RetrieveReservation",
      readonly I: typeof RetrieveRequest,
      readonly O: typeof RetrieveResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.GetAbandonTripSearch
     */
    readonly getAbandonTripSearch: {
      readonly name: "GetAbandonTripSearch",
      readonly I: typeof GetAbandonTripSearchRequest,
      readonly O: typeof GetAbandonTripSearchResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.RevalidateItinerary
     */
    readonly revalidateItinerary: {
      readonly name: "RevalidateItinerary",
      readonly I: typeof RevalidateItineraryRequest,
      readonly O: typeof RevalidateItineraryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc elude.proto.AirAdapter.SetSearchCache
     */
    readonly setSearchCache: {
      readonly name: "SetSearchCache",
      readonly I: typeof SetSearchCacheRequest,
      readonly O: typeof SetSearchCacheResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

