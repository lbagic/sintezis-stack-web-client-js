@mixin container-base {
  width: 100%;
  padding-left: 16px;
  padding-right: 16px;
  margin-left: auto;
  margin-right: auto;
}

@mixin container-sizes {
  --container-padding: 16px;
  &.tiny {
    --container-padding: 4px;
  }
  &.small {
    --container-padding: 8px;
  }
  &.medium {
    --container-padding: 16px;
  }
  &.large {
    --container-padding: 32px;
  }
}

@mixin flexbox-gap {
  --flex-gap: 16px;
  &.tiny {
    --flex-gap: 4px;
  }
  &.small {
    --flex-gap: 8px;
  }
  &.medium {
    --flex-gap: 16px;
  }
  &.large {
    --flex-gap: 32px;
  }
}
@mixin flexbox-center {
  &.center {
    align-items: center;
    justify-content: center;
  }
}
@mixin flexbox-equal {
  &.equal > * {
    flex-basis: 0;
    flex-grow: 1;
  }
}
@mixin grid-gap {
  --grid-gap: 16px;
  &.tiny {
    --grid-gap: 4px;
  }
  &.small {
    --grid-gap: 8px;
  }
  &.medium {
    --grid-gap: 16px;
  }
  &.large {
    --grid-gap: 32px;
  }
}

.#{$prefix}container {
  @include container-sizes;
  padding: var(--container-padding);
}
@each $container, $size in get("container") {
  .#{$prefix}container-#{$container} {
    @include container-base;
    max-width: $size;
  }
}

.#{$prefix}grid {
  @include grid-gap;
  --gtc: initial;
  --gtr: initial;
  --gta: initial;
  display: grid;
  align-content: flex-start;
  grid-template-columns: var(--gtc);
  grid-template-rows: var(--gtr);
  grid-template-areas: var(--gta);
  gap: var(--grid-gap);
  &.center {
    align-content: center;
    justify-content: center;
  }
}

.#{$prefix}grid-fill {
  --width: 200px;
  @include grid-gap;
  display: grid;
  align-content: flex-start;
  grid-template-columns: repeat(auto-fill, minmax(var(--width), 1fr));
  gap: var(--grid-gap);
}
.#{$prefix}flex,
.#{$prefix}flex-column,
.#{$prefix}flex-wrap {
  @include flexbox-gap;
  @include flexbox-center;
  @include flexbox-equal;
  display: flex;
  gap: var(--flex-gap);
}

.#{$prefix}flex {
  align-items: center;
}
.#{$prefix}flex-column {
  flex-direction: column;
}
.#{$prefix}flex-wrap {
  align-items: center;
  flex-wrap: wrap;
}
.#{$prefix}flex-carousel {
  // If used within grid, be wary of grid blowout. https://css-tricks.com/preventing-a-grid-blowout/
  // Quick fix: `min-width: 0;` or `overflow-x: hidden;` on grid element containing carousel
  --carousel-item-width: auto;
  --carousel-item-height: auto;
  @include flexbox-gap;

  display: flex;
  gap: var(--flex-gap);
  overflow-x: auto;

  // scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch; // iOS smooth scroll

  & > * {
    // scroll-snap-align: start;
    flex: 0 0 var(--carousel-item-width);
    width: auto;
    height: var(--carousel-item-height);
    max-width: 100%;
  }
  // & > * + * {
  //   margin-left: var(--flex-gap);
  // }
  & img {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }
}
