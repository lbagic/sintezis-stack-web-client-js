syntax = "proto3";

package elude.proto;

option go_package = "./;gen";

import "proto/booking/booking_request.proto";
import "proto/booking/booking_response.proto";


service BookingController {

    rpc GetBookings(GetBookingsRequest) returns (GetBookingsResponse){} // GetBookings method is used to get all bookings from database.

    rpc GetCompletedBookings(GetBookingsRequest) returns (GetBookingsResponse){} // GetCompletedBookings method is used to get all completed bookings by user id from database.

    rpc GetUpcomingBookings(GetBookingsRequest) returns (GetBookingsResponse){} // GetUpcomingBookings method is used to get all upcoming bookings by user id from database.

    rpc GetCurrentBookings(GetBookingsRequest) returns (GetBookingsResponse){} // GetCurrentBookings method is used to get all current bookings by user id from database.

    rpc GetHomeBookings(GetBookingsRequest) returns (GetHomeBookingsResponse){} // GetHomeBookings method is used to get GetHomeCurrentBooking and GetHomeUpcomingBooking by user id from database.

    rpc GetBooking(GetBookingRequest) returns (BookingResponse){} // GetBooking method is used to get a booking by booking id from database.

    rpc ChangeBookingStatus(ChangeBookingStatusRequest) returns (BookingResponse){} // ChangeBookingStatus method is used to update a status on an existing booking.

    rpc UpdateBooking(UpdateBookingRequest) returns (BookingResponse){} // UpdateBooking method is used to update a booking by booking id from database.

    rpc GetBookingByEludeReference(GetBookingByEludeReferenceRequest) returns (BookingResponse){} // GetBookingByEludeReference method is used to get a booking by elude reference from database.

    rpc GetTravellers(GetTravellersRequest) returns (TravellersResponse){} // GetTravellers method is used to get all travellers by user id from database.

    rpc GetTraveller(GetTravellerRequest) returns (TravellerResponse) {} // GetTraveller method is used to get a traveller by traveller id from database.

    rpc CreateTraveller(CreateTravellerRequest) returns (TravellerResponse) {} // CreateTraveller method is used to create a new traveller.

    rpc UpdateTraveller(UpdateTravellerRequest) returns (TravellerResponse) {} // UpdateTraveller method is used to update an existing traveller.

    rpc DeleteTraveller(DeleteTravellerRequest) returns (TravellerResponse) {} // DeleteTraveller method is used to delete an existing traveller .

    rpc SendEmailsForUserBookings(SendEmailsRequest) returns (SendEmailsResponse) {}  // SendEmailsForUserBookings method is used to send booking emails for all user bookings.

    rpc SendEmailsForBooking(SendEmailsRequest) returns (SendEmailsResponse) {} // SendEmailsForBooking method is used to send booking emails by booking id.

    // Stickers controller

    rpc GetSticker(GetStickerRequest) returns (StickerResponse){} // GetSticker method is used to get a sticker by sticker id from database.

    rpc GetStickers(GetStickersRequest) returns (StickersResponse){} // GetStickers method is used to get all stickers from database.

    rpc CreateSticker(CreateStickerRequest) returns (StickerResponse){} // CreateSticker method is used to create a new sticker.

    rpc UpdateSticker(UpdateStickerRequest) returns (StickerResponse){} // UpdateSticker method is used to update an existing sticker.

    rpc DeleteSticker(DeleteStickerRequest) returns (StickerResponse){} // DeleteSticker method is used to delete an existing sticker.

    rpc GetStickersForUser(GetStickersForUserRequest) returns (StickerUserResponse){} // GetStickersForUser method is used to get StickerUsers by user id from database.

    rpc UpdateStickerWithImage(stream UpdateStickerWithImageRequest) returns (StickerResponse){} // UpdateStickerWithImage method is currently not supported. Use UpdateStickerWithImageUnary instead.

    rpc GetTravelStats(GetTravelStatsRequest) returns (GetTravelStatsResponse) {} // GetTravelStats method is used to calculate travel stats from user bookings.

    // Amenities controller

    rpc GetAmenity(GetAmenityRequest) returns (AmenityResponse){} // GetAmenity method is used to get a amenity by amenity id from database.

    rpc GetAmenities(GetAmenitiesRequest) returns (AmenitiesResponse){} // GetAmenities method is used to get all amenities from database.

    rpc CreateAmenity(CreateAmenityRequest) returns (AmenityResponse){} // CreateAmenity method is used to create a new amenity.

    rpc UpdateAmenity(UpdateAmenityRequest) returns (AmenityResponse){} // UpdateAmenity method is used to update an existing amenity.

    rpc DeleteAmenity(DeleteAmenityRequest) returns (AmenityResponse){} // DeleteAmenity method is used to delete an existing amenity.

    rpc UpdateAmenityWithImage(stream UpdateAmenityWithImageRequest) returns (AmenityResponse){} // UpdateAmenityWithImage method is currently not supported. Use UpdateAmenityWithImageUnary instead.

    // Gds controller

    rpc GetGds(GetGdsRequest) returns (GdsResponse){} // GetGds method is used to get gds by gds id from database.

    rpc GetAllGds(GetAllGdsRequest) returns (AllGdsResponse){} // GetAllGds method is used to get all gds from database.

    rpc CreateGds(CreateGdsRequest) returns (GdsResponse){} // CreateGds method is used to create a new gds.

    rpc UpdateGds(UpdateGdsRequest) returns (GdsResponse){} // UpdateGds method is used to update an existing gds.

    rpc DeleteGds(DeleteGdsRequest) returns (GdsResponse){} // DeleteGds method is used to delete an existing gds.
    
    // MealPlans controller

    rpc GetMealPlan(GetMealPlanRequest) returns (MealPlanResponse){} // GetMealPlan method is used to get a meal plan by meal plan id from database.

    rpc GetMealPlans(GetMealPlansRequest) returns (MealPlansResponse){} // GetMealPlans method is used to get all meal plans from database.

    rpc CreateMealPlan(CreateMealPlanRequest) returns (MealPlanResponse){} // CreateMealPlan method is used to create a new meal plan.

    rpc UpdateMealPlan(UpdateMealPlanRequest) returns (MealPlanResponse){} // UpdateMealPlan method is used to update an existing meal plan.

    rpc DeleteMealPlan(DeleteMealPlanRequest) returns (MealPlanResponse){} // DeleteMealPlan method is used to delete an existing meal plan.

    // RoomViewTypes controller

    rpc GetRoomViewType(GetRoomViewTypeRequest) returns (RoomViewTypeResponse){} // GetRoomViewType method is used to get a room view type by room view type id from database.

    rpc GetRoomViewTypes(GetRoomViewTypesRequest) returns (RoomViewTypesResponse){} // GetRoomViewTypes method is used to get all room view types from database.

    rpc CreateRoomViewType(CreateRoomViewTypeRequest) returns (RoomViewTypeResponse){} // CreateRoomViewType method is used to create a new room view type.

    rpc UpdateRoomViewType(UpdateRoomViewTypeRequest) returns (RoomViewTypeResponse){} // UpdateRoomViewType method is used to update an existing room view type.

    rpc DeleteRoomViewType(DeleteRoomViewTypeRequest) returns (RoomViewTypeResponse){} // DeleteRoomViewType method is used to delete an existing room view type.
    
    // FlightTypes controller

    rpc GetFlightType(GetFlightTypeRequest) returns (FlightTypeResponse){} // GetFlightType method is used to get a flight type by flight type id from database.

    rpc GetFlightTypes(GetFlightTypesRequest) returns (FlightTypesResponse){} // GetFlightTypes method is used to get all flight types from database.

    rpc CreateFlightType(CreateFlightTypeRequest) returns (FlightTypeResponse){} // CreateFlightType method is used to create a new flight type.

    rpc UpdateFlightType(UpdateFlightTypeRequest) returns (FlightTypeResponse){} // UpdateFlightType method is used to update an existing flight type.

    rpc DeleteFlightType(DeleteFlightTypeRequest) returns (FlightTypeResponse){} // DeleteFlightType method is used to delete an existing flight type.
}
