syntax = "proto3";

package elude.proto;

option go_package = "./;gen";

import "proto/auth/auth_request.proto";
import "proto/auth/auth_response.proto";
import "proto/booking/booking_response.proto";

service AuthController {

    rpc Authorize(AuthRequest) returns (AuthResponse) {} // Authorize method authorizes a request. It is used in every rpc call.

    rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse) {} // CheckPermission method is used to check user request permission.

    rpc CheckAdditionalPermission(CheckAdditionalPermissionRequest) returns (CheckPermissionResponse) {} // CheckAdditionalPermission method is used to check additional

    rpc Register(RegisterRequest) returns (AccountResponse) {} // Register method is used to SignUp a new User.

    rpc Login(LoginRequest) returns (AccountResponse) {} // Login method is used to log in an existing user.

    rpc VerifyEmail(VerifyEmailRequest) returns (AccountResponse) {} // VerifyEmail method is used to verify email for a new user.

    rpc PasswordRecover(PasswordRecoverRequest) returns (AccountResponse) {} // PasswordRecover method is used to send password recovery email.

    rpc PasswordReset(PasswordResetRequest) returns (AccountResponse) {} // PasswordReset method is used to reset user password.

    rpc VerifyRecoveryToken(VerifyRecoveryTokenRequest) returns (AccountResponse) {} // VerifyRecoveryToken method is used to verify user's recovery token.

    rpc GetUsers(GetUsersRequest) returns (UsersResponse) {} // GetUsers method is used to get all users from database.

    rpc GetUser(GetUserRequest) returns (UserResponse) {} // GetUser method is used to get user by id from database.

    rpc CreateUser(CreateUserRequest) returns (UserResponse) {} // CreateUser method is used to create a new user.

    rpc UpdateUser(UpdateUserRequest) returns (UserResponse) {} // UpdateUser method is used to update an existing user.

    rpc DeleteUser(DeleteUserRequest) returns (UserResponse) {} // DeleteUser method is used to delete an existing user.

    rpc ChangePassword(ChangePasswordRequest) returns (AccountResponse) {} // ChangePassword method is used to change users password.

    rpc AddSocial(AddSocialRequest) returns (AddSocialResponse) {} // AddSocial method is used to get social for a user.

    rpc GetTitles(GetTitlesRequest) returns (TitlesResponse) {} // GetTitles method is used to get all titles from database.

    rpc GetRoles(GetRolesRequest) returns (RolesResponse) {} // GetRoles method is used to get all roles from database.

    rpc GetRole(GetRoleRequest) returns (RoleResponse) {} // GetRole method is used to get role by id from database.

    rpc CreateRole(CreateRoleRequest) returns (RoleResponse) {} // CreateRole method is used to create a new role.

    rpc UpdateRole(UpdateRoleRequest) returns (RoleResponse) {} // UpdateRole method is used to update an existing role.

    rpc DeleteRole(DeleteRoleRequest) returns (RoleResponse) {} // DeleteRole method is used to delete an existing role.

    rpc GetPermissions(GetPermissionsRequest) returns (PermissionsResponse) {} // GetPermissions method is used to get all permissions from database.

    rpc ValidateJwtToken(ValidateJwtTokenRequest) returns (ValidateJwtTokenResponse) {} // ValidateJwtToken method is used to validate a Jwt auth token.

    rpc ResendConfirmationEmail(ResendConfirmationEmailRequest) returns (SendEmailsResponse) {}  // ResendConfirmationEmail method is used to resend user confirmation email.
}