syntax = "proto3";

package elude.proto;

option go_package = "./;gen";

import "proto/commons/status.proto";
import "proto/commons/pagination.proto";
import "proto/commons/auth.proto";
import "proto/commons/filter_options.proto";
import "proto/commons/options.proto";
import "proto/commons/session_info.proto";
import "proto/models/user.proto";
import "proto/models/title.proto";
import "proto/models/role.proto";
import "proto/models/permission.proto";

// AuthResponse is used in Authorize rpc calls. Contains user data.
message AuthResponse {
    Auth auth = 1; // Used to authorize the request.
    User user = 2; // User data from authorize.
    Options options = 3; // Common options for request.
    SessionInfo session_info = 4; // Session information.
    // Required: status code.
    Status status = 5; // Status of response.
}

// CheckPermissionResponse is used in internal permission check rpc calls.
message CheckPermissionResponse {
    Options options = 1; // Common options for request.
    SessionInfo session_info = 2; // Session information.
    Status status = 3; // Status of response.
}

// AccountResponse is used in account auth rpc calls.
message AccountResponse {
    string token = 1; // User social token.
    User user = 2; // User account data.
    int64 expires_in = 3; // Token expiration date time.
    // Required: status code.
    Status status = 4; // Status of response.
    SessionInfo session_info = 5; // Session information.
}

// UsersResponse is used for GetUsers rpc call. Used to return all users from DB.
message UsersResponse {
    repeated User users = 1; // List of users data.
    // Required: status code.
    Status status = 2; // Status of response.
    SessionInfo session_info = 3; // Session information.
    Pagination pagination = 4; // Used to paginate response data.
}

// GetUserRequest is used for user rpc calls.
message UserResponse {
    User user = 1; // User data.
    // Required: status code.
    Status status = 2; // Status of response.
    SessionInfo session_info = 3; // Session information.
}

// AddSocialResponse is used for AddSocial rpc calls.
message AddSocialResponse {
    Auth auth = 1; // Used to authorize the request.
    SessionInfo session_info = 2; // Session information.
    // Required: status code.
    Status status = 3; // Status of response.
}

// TitlesResponse is used for GetTitles rpc call. Used to return all titles from DB.
message TitlesResponse {
    SessionInfo session_info = 1; // Session information.
    repeated Title titles = 2; // List of titles account data.
    // Required: status code.
    Status status = 3; // Status of response.
}

// RoleResponse is used for role rpc calls.
message RoleResponse {
    Role role = 1; // Role data.
    // Required: status code.
    Status status = 2; // Status of response.
    SessionInfo session_info = 3; // Session information.
}

// RolesResponse is used for GetRoles rpc calls. Used to return all roles from DB.
message RolesResponse {
    repeated Role roles = 1; // List of roles data.
    // Required: status code.
    Status status = 2; // Status of response.
    SessionInfo session_info = 3; // Session information.
}

// PermissionsResponse is used for GetPermissions rpc calls. Used to return all permissions from DB.
// Every rpc method should have at least one unique permission
message PermissionsResponse {
    repeated Permission permissions = 1; // List of roles data.
    // Required: status code.
    Status status = 2; // Status of response.
    SessionInfo session_info = 3; // Session information.
}

// ValidateJwtTokenResponse is used for ValidateJwtToken rpc calls.
message ValidateJwtTokenResponse {
    Auth auth = 1; // Used to authorize the request.
    bool valid = 2; // Used to check if token is valid.
    Options options = 3; // Common options for request.
    SessionInfo session_info = 4; // Session information.
    // Required: status code.
    Status status = 5; // Status of response.
}
