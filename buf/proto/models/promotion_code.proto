syntax = "proto3";

package elude.proto;

option go_package = "./;gen";

import "validate/validate.proto";
import "proto/commons/timestamp.proto";
import "proto/models/user.proto";

// Promotion code message is returned in responses for Promotion code CRUD operations.
// It contains all the information for Promotion code model.
message PromotionCode {
  int32 id = 1; // Promotion code id.
  bool active = 2; // If active is false, promotion code will be ignored.
  string code = 3 [(validate.rules).string = {pattern: "^[a-zA-Z0-9 &-_]*$",min_len: 1}]; // Promotion code used in reservation request. Given to user.
  repeated int32 user_ids = 4; // If filled, only this users will be able to use promotion code.
  string name = 5 [(validate.rules).string = {pattern: "^[a-zA-Z0-9 &-_/.]*$",min_len: 1}]; // Promotion code name.
  int32 max_redemptions = 6; // If filled, sets a maximum number of uses of promotion code.
  Timestamp expires_at = 7; // If filled, promotion code will not be valid after this timestamp.
  int32 times_redeemed = 8; // Times promotion code was redeemed.
  float percent_off = 9; // If filled, discounts total amount by this percentage.
  float amount_off = 10; // If filled, discounts total amount by this amount. Either amount_off or percent_off needs to be filled.
  string currency = 11; // Currency for amount off discount. If amount_off filled this needs to be also filled.
  repeated PromotionCodeUser promotion_code_users = 12;
}

// PromotionCodeUser is usually returned as part of a PromotionCode message. Contains info about the users for a specific promotion code.
message PromotionCodeUser {
  int32 id = 1; // Promotion code users id.
  int32 promotion_code_id = 2; // Promotion Code id.
  int32 user_id = 3; //User id.
  PromotionCode promotion_code = 4; // Promotion Code data.
  User user = 5; // User data.
  int32 times_redeemed_by_user = 6; // Number of times user has redeemed promotion code.
}