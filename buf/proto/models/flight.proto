syntax = "proto3";

package elude.proto;

option go_package = "./;gen";

import "proto/models/city.proto";
import "proto/models/airline.proto";
import "validate/validate.proto";
import "proto/commons/timestamp.proto";

// Flight message is returned as part of the itinerary message. Contains info about a booked flight.
message Flight {
    int32 id = 1; // Flight id.
    string duration = 2 [(validate.rules).string = {pattern: "^[0-9.]*$",min_len: 1}]; // FLight duration in minutes. Calculated by adding all flight segment durations without breaks in between.
    int32 flight_type_id = 3 [(validate.rules).int32 = {gte: 1}]; // Flight type id.
    int32 departure_city_id = 4 [(validate.rules).int32 = {gte: 1}]; // Flight departure city id.
    int32 arrival_city_id = 5 [(validate.rules).int32 = {gte: 1}]; // Flight arrival city id.
    repeated Segment segments = 6; // List of all flight segments data.
    City departure_city = 7; // Flight departure city data.
    City arrival_city = 8; // Flight arrival city data.
}

// Segment message is returned as part of the flight message. Contains info on the segments of a specific flight.
message Segment {
    int32 id = 1; // Flight segment id.
    string duration = 2; // Flight segment duration.
    string gate = 3; // Flight segment gate (e.g. 1).
    string arrival_terminal = 4; // Flight arrival terminal (e.g. B).
    string departure_terminal = 5; // Flight departure terminal (e.g. C).
    string flight_number = 6; // Flight segment number (e.g. 3263)
    string departure_date_time = 7 [deprecated = true]; // Flight segment departure date time.
    string arrival_date_time = 8 [deprecated = true]; // Flight segment arrival date time.
    int32 departure_airport_id = 9 [(validate.rules).int32 = {gte: 1}]; // Flight segment departure airport id.
    int32 arrival_airport_id = 10 [(validate.rules).int32 = {gte: 1}]; // FLight segment arrival airport id.
    int32 flight_id = 11 [(validate.rules).int32 = {gte: 1}]; // Flight segment flight id.
    Airport departure_airport = 12; // Flight segment departure airport data.
    Airport arrival_airport = 13; // Flight segment arrival airport data.
    Flight flight = 14; // Flight segment flight data.
    int32 airline_id = 15; // Flight airline id.
    Airline airline = 16; // Flight segment airline data.
    Timestamp departure_date_time_timestamp = 17; // Flight segment departure date time.
    Timestamp arrival_date_time_timestamp = 18; // Flight segment arrival date time.
}