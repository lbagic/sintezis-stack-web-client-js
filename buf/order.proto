syntax = "proto3";

package order.proto;

option go_package = "api-service-go/gen;gen";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "pagination.proto";
import "filter.proto";
import "user.proto";
import "bunkerprice.proto";

message Order {
	uint32 ID = 1;
	string order_date = 2;
	float fuel_price = 3;
	string fuel_type = 4;
	string port_name = 5;
	string port_code = 6;
	string order_message = 7;
  user.proto.User customer = 8;
}

message Orders {
  repeated Order orders = 1;
  pagination.proto.Pagination pagination = 2;
}

message GetOrder {
  int32 ID = 1;
}

message GetOrders {
  pagination.proto.Pagination pagination = 1 [(validate.rules).message.required = true];
  filter.proto.FilterOptions filter_options = 2;
}

message DeleteOrder {
  int32 ID = 1;
}

message CreateCustomerOrderReq {
  bunkerprice.proto.BunkerPrice bunker_price = 1;
  int32 customerID = 2;
  string order_message = 3;
}

service OrderService {
  rpc Add(Order) returns (Order) {
    option (google.api.http) = {
      post: "/api/v1/orders"
      body: "*"
    };
  }
  rpc Edit(Order) returns (Order) {
    option (google.api.http) = {
      put: "/api/v1/orders/{ID}"
      body: "*"
    };
  }
  rpc Get(GetOrder) returns (Order) {
    option (google.api.http) = {
      get: "/api/v1/orders/{ID}"
    };
  }
  rpc GetAll(GetOrders) returns (Orders) {
    option (google.api.http) = {
      get: "/api/v1/orders"
    };
  }
  rpc Delete(DeleteOrder) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/orders/{ID}"
    };
  }
  rpc CreateCustomerOrder(CreateCustomerOrderReq) returns (Order) {
    option (google.api.http) = {
      post: "/api/v1/orders/createCustomerOrder"
      body: "*"
    };
  }
}