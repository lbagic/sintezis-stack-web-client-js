syntax = "proto3";

package permission.proto;

option go_package = "api-service-go/gen;gen";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

message Permission {
  uint32 ID = 1;
  string name = 2 [(validate.rules).string = {min_bytes: 1}];
}

message Permissions {
  repeated Permission permissions = 1;
}

message GetPermission {
  int32 ID = 1;
}

message GetPermissions {
}

message DeletePermission {
  int32 ID = 1;
}

service PermissionService {
  rpc Add(Permission) returns (Permission) {
    option (google.api.http) = {
      post: "/api/v1/permissions"
      body: "*"
    };
  }
  rpc Edit(Permission) returns (Permission) {
    option (google.api.http) = {
      put: "/api/v1/permissions/{ID}"
      body: "*"
    };
  }
  rpc Get(GetPermission) returns (Permission) {
    option (google.api.http) = {
      get: "/api/v1/permissions/{ID}"
    };
  }
  rpc GetAll(GetPermissions) returns (Permissions) {
    option (google.api.http) = {
      get: "/api/v1/permissions"
    };
  }
  rpc Delete(DeletePermission) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/permissions/{ID}"
    };
  }
}
